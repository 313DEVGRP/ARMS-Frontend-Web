{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/table.js","../src/split.js","../src/index.js"],"sourcesContent":["const YEAR = 'year';\r\nconst MONTH = 'month';\r\nconst DAY = 'day';\r\nconst HOUR = 'hour';\r\nconst MINUTE = 'minute';\r\nconst SECOND = 'second';\r\nconst MILLISECOND = 'millisecond';\r\n\r\nexport default {\r\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\r\n        if (date instanceof Date) {\r\n            return date;\r\n        }\r\n        if (typeof date === 'string') {\r\n            let date_parts, time_parts;\r\n            const parts = date.split(' ');\r\n\r\n            date_parts = parts[0]\r\n                .split(date_separator)\r\n                .map((val) => parseInt(val, 10));\r\n            time_parts = parts[1] && parts[1].split(time_separator);\r\n\r\n            // month is 0 indexed\r\n            date_parts[1] = date_parts[1] - 1;\r\n\r\n            let vals = date_parts;\r\n\r\n            if (time_parts && time_parts.length) {\r\n                if (time_parts.length == 4) {\r\n                    time_parts[3] = '0.' + time_parts[3];\r\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\r\n                }\r\n                vals = vals.concat(time_parts);\r\n            }\r\n\r\n            return new Date(...vals);\r\n        }\r\n    },\r\n\r\n    to_string(date, with_time = false) {\r\n        if (!(date instanceof Date)) {\r\n            throw new TypeError('Invalid argument type');\r\n        }\r\n        const vals = this.get_date_values(date).map((val, i) => {\r\n            if (i === 1) {\r\n                // add 1 for month\r\n                val = val + 1;\r\n            }\r\n\r\n            if (i === 6) {\r\n                return padStart(val + '', 3, '0');\r\n            }\r\n\r\n            return padStart(val + '', 2, '0');\r\n        });\r\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\r\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\r\n\r\n        return date_string + (with_time ? ' ' + time_string : '');\r\n    },\r\n\r\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'ko') {\r\n        const dateTimeFormat = new Intl.DateTimeFormat(lang, {\r\n            month: 'long'\r\n        });\r\n        const month_name = dateTimeFormat.format(date);\r\n        const month_name_capitalized =\r\n            month_name.charAt(0).toUpperCase() + month_name.slice(1);\r\n\r\n        const values = this.get_date_values(date).map(d => padStart(d, 2, 0));\r\n        const format_map = {\r\n            YYYY: values[0],\r\n            MM: padStart(+values[1] + 1, 2, 0),\r\n            DD: values[2],\r\n            HH: values[3],\r\n            mm: values[4],\r\n            ss: values[5],\r\n            SSS: values[6],\r\n            D: values[2],\r\n            MMMM: month_name_capitalized,\r\n            MMM: month_name_capitalized,\r\n        };\r\n\r\n        let str = format_string;\r\n        const formatted_values = [];\r\n\r\n        Object.keys(format_map)\r\n            .sort((a, b) => b.length - a.length) // big string first\r\n            .forEach((key) => {\r\n                if (str.includes(key)) {\r\n                    str = str.replace(key, `$${formatted_values.length}`);\r\n                    formatted_values.push(format_map[key]);\r\n                }\r\n            });\r\n\r\n        formatted_values.forEach((value, i) => {\r\n            str = str.replace(`$${i}`, value);\r\n        });\r\n\r\n        return str;\r\n    },\r\n\r\n    diff(date_a, date_b, scale = DAY) {\r\n        let milliseconds, seconds, hours, minutes, days, months, years;\r\n\r\n        milliseconds = date_a - date_b;\r\n        seconds = milliseconds / 1000;\r\n        minutes = seconds / 60;\r\n        hours = minutes / 60;\r\n        days = hours / 24;\r\n        months = days / 30;\r\n        years = months / 12;\r\n\r\n        if (!scale.endsWith('s')) {\r\n            scale += 's';\r\n        }\r\n\r\n        return Math.floor(\r\n            {\r\n                milliseconds,\r\n                seconds,\r\n                minutes,\r\n                hours,\r\n                days,\r\n                months,\r\n                years,\r\n            }[scale]\r\n        );\r\n    },\r\n\r\n    today() {\r\n        const vals = this.get_date_values(new Date()).slice(0, 3);\r\n        return new Date(...vals);\r\n    },\r\n\r\n    now() {\r\n        return new Date();\r\n    },\r\n\r\n    add(date, qty, scale) {\r\n        qty = parseInt(qty, 10);\r\n        const vals = [\r\n            date.getFullYear() + (scale === YEAR ? qty : 0),\r\n            date.getMonth() + (scale === MONTH ? qty : 0),\r\n            date.getDate() + (scale === DAY ? qty : 0),\r\n            date.getHours() + (scale === HOUR ? qty : 0),\r\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\r\n            date.getSeconds() + (scale === SECOND ? qty : 0),\r\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\r\n        ];\r\n        return new Date(...vals);\r\n    },\r\n\r\n    start_of(date, scale) {\r\n        const scores = {\r\n            [YEAR]: 6,\r\n            [MONTH]: 5,\r\n            [DAY]: 4,\r\n            [HOUR]: 3,\r\n            [MINUTE]: 2,\r\n            [SECOND]: 1,\r\n            [MILLISECOND]: 0,\r\n        };\r\n\r\n        function should_reset(_scale) {\r\n            const max_score = scores[scale];\r\n            return scores[_scale] <= max_score;\r\n        }\r\n\r\n        const vals = [\r\n            date.getFullYear(),\r\n            should_reset(YEAR) ? 0 : date.getMonth(),\r\n            should_reset(MONTH) ? 1 : date.getDate(),\r\n            should_reset(DAY) ? 0 : date.getHours(),\r\n            should_reset(HOUR) ? 0 : date.getMinutes(),\r\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\r\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\r\n        ];\r\n\r\n        return new Date(...vals);\r\n    },\r\n\r\n    clone(date) {\r\n        return new Date(...this.get_date_values(date));\r\n    },\r\n\r\n    get_date_values(date) {\r\n        return [\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            date.getHours(),\r\n            date.getMinutes(),\r\n            date.getSeconds(),\r\n            date.getMilliseconds(),\r\n        ];\r\n    },\r\n\r\n    get_days_in_month(date) {\r\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n        const month = date.getMonth();\r\n\r\n        if (month !== 1) {\r\n            return no_of_days[month];\r\n        }\r\n\r\n        // Feb\r\n        const year = date.getFullYear();\r\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\r\n            return 29;\r\n        }\r\n        return 28;\r\n    },\r\n};\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\r\nfunction padStart(str, targetLength, padString) {\r\n    str = str + '';\r\n    targetLength = targetLength >> 0;\r\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\r\n    if (str.length > targetLength) {\r\n        return String(str);\r\n    } else {\r\n        targetLength = targetLength - str.length;\r\n        if (targetLength > padString.length) {\r\n            padString += padString.repeat(targetLength / padString.length);\r\n        }\r\n        return padString.slice(0, targetLength) + String(str);\r\n    }\r\n}\r\n","export function $(expr, con) {\r\n    return typeof expr === 'string'\r\n        ? (con || document).querySelector(expr)\r\n        : expr || null;\r\n}\r\n\r\nexport function createSVG(tag, attrs) {\r\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n    for (let attr in attrs) {\r\n        if (attr === 'append_to') {\r\n            const parent = attrs.append_to;\r\n            parent.appendChild(elem);\r\n        } else if (attr === 'innerHTML') {\r\n            elem.innerHTML = attrs.innerHTML;\r\n        } else {\r\n            elem.setAttribute(attr, attrs[attr]);\r\n        }\r\n    }\r\n    return elem;\r\n}\r\n\r\nexport function animateSVG(svgElement, attr, from, to) {\r\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\r\n\r\n    if (animatedSvgElement === svgElement) {\r\n        // triggered 2nd time programmatically\r\n        // trigger artificial click event\r\n        const event = document.createEvent('HTMLEvents');\r\n        event.initEvent('click', true, true);\r\n        event.eventName = 'click';\r\n        animatedSvgElement.dispatchEvent(event);\r\n    }\r\n}\r\n\r\nfunction getAnimationElement(\r\n    svgElement,\r\n    attr,\r\n    from,\r\n    to,\r\n    dur = '0.4s',\r\n    begin = '0.1s'\r\n) {\r\n    const animEl = svgElement.querySelector('animate');\r\n    if (animEl) {\r\n        $.attr(animEl, {\r\n            attributeName: attr,\r\n            from,\r\n            to,\r\n            dur,\r\n            begin: 'click + ' + begin, // artificial click\r\n        });\r\n        return svgElement;\r\n    }\r\n\r\n    const animateElement = createSVG('animate', {\r\n        attributeName: attr,\r\n        from,\r\n        to,\r\n        dur,\r\n        begin,\r\n        calcMode: 'spline',\r\n        values: from + ';' + to,\r\n        keyTimes: '0; 1',\r\n        keySplines: cubic_bezier('ease-out'),\r\n    });\r\n    svgElement.appendChild(animateElement);\r\n\r\n    return svgElement;\r\n}\r\n\r\nfunction cubic_bezier(name) {\r\n    return {\r\n        ease: '.25 .1 .25 1',\r\n        linear: '0 0 1 1',\r\n        'ease-in': '.42 0 1 1',\r\n        'ease-out': '0 0 .58 1',\r\n        'ease-in-out': '.42 0 .58 1',\r\n    }[name];\r\n}\r\n\r\n$.on = (element, event, selector, callback) => {\r\n    if (!callback) {\r\n        callback = selector;\r\n        $.bind(element, event, callback);\r\n    } else {\r\n        $.delegate(element, event, selector, callback);\r\n    }\r\n};\r\n\r\n$.off = (element, event, handler) => {\r\n    element.removeEventListener(event, handler);\r\n};\r\n\r\n$.bind = (element, event, callback) => {\r\n    event.split(/\\s+/).forEach(function (event) {\r\n        element.addEventListener(event, callback);\r\n    });\r\n};\r\n\r\n$.delegate = (element, event, selector, callback) => {\r\n    element.addEventListener(event, function (e) {\r\n        const delegatedTarget = e.target.closest(selector);\r\n        if (delegatedTarget) {\r\n            e.delegatedTarget = delegatedTarget;\r\n            callback.call(this, e, delegatedTarget);\r\n        }\r\n    });\r\n};\r\n\r\n$.closest = (selector, element) => {\r\n    if (!element) return null;\r\n\r\n    if (element.matches(selector)) {\r\n        return element;\r\n    }\r\n\r\n    return $.closest(selector, element.parentNode);\r\n};\r\n\r\n$.attr = (element, attr, value) => {\r\n    if (!value && typeof attr === 'string') {\r\n        return element.getAttribute(attr);\r\n    }\r\n\r\n    if (typeof attr === 'object') {\r\n        for (let key in attr) {\r\n            $.attr(element, key, attr[key]);\r\n        }\r\n        return;\r\n    }\r\n\r\n    element.setAttribute(attr, value);\r\n};\r\n\r\n$.style = (element, attr, value) => {\r\n    if (!value && typeof attr === 'string') {\r\n        return element.getAttribute(attr);\r\n    }\r\n\r\n    if (typeof attr === 'object') {\r\n        for (let key in attr) {\r\n            $.style(element, key, attr[key]);\r\n        }\r\n        return;\r\n    }\r\n\r\n    element.style[attr] = value;\r\n};\r\n","import date_utils from './date_utils';\r\nimport { $, createSVG, animateSVG } from './svg_utils';\r\n\r\nexport default class Bar {\r\n    constructor(gantt, task) {\r\n        this.set_defaults(gantt, task);\r\n        this.prepare();\r\n        this.draw();\r\n        this.bind();\r\n    }\r\n\r\n    set_defaults(gantt, task) {\r\n        this.action_completed = false;\r\n        this.gantt = gantt;\r\n        this.task = task;\r\n    }\r\n\r\n    prepare() {\r\n        this.prepare_values();\r\n        this.prepare_helpers();\r\n    }\r\n\r\n    prepare_values() {\r\n        this.invalid = this.task.invalid;\r\n        this.height = this.gantt.options.bar_height;\r\n        this.x = this.compute_x();\r\n        this.y = this.compute_y();\r\n        this.corner_radius = this.gantt.options.bar_corner_radius;\r\n        this.duration =\r\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\r\n            this.gantt.options.step;\r\n        this.width = this.gantt.options.column_width * this.duration;\r\n        this.progress_width =\r\n            this.gantt.options.column_width *\r\n                this.duration *\r\n                (this.task.progress / 100) || 0;\r\n        this.group = createSVG('g', {\r\n            class: 'bar-wrapper ' + (this.task.custom_class || ''),\r\n            'data-id': this.task.id,\r\n        });\r\n        this.bar_group = createSVG('g', {\r\n            class: 'bar-group',\r\n            append_to: this.group,\r\n        });\r\n        this.handle_group = createSVG('g', {\r\n            class: 'handle-group',\r\n            append_to: this.group,\r\n        });\r\n    }\r\n\r\n    prepare_helpers() {\r\n        SVGElement.prototype.getX = function () {\r\n            return +this.getAttribute('x');\r\n        };\r\n        SVGElement.prototype.getY = function () {\r\n            return +this.getAttribute('y');\r\n        };\r\n        SVGElement.prototype.getWidth = function () {\r\n            return +this.getAttribute('width');\r\n        };\r\n        SVGElement.prototype.getHeight = function () {\r\n            return +this.getAttribute('height');\r\n        };\r\n        SVGElement.prototype.getEndX = function () {\r\n            return this.getX() + this.getWidth();\r\n        };\r\n    }\r\n\r\n    draw() {\r\n        this.draw_bar();\r\n        this.draw_progress_bar();\r\n        this.draw_label();\r\n        this.draw_resize_handles();\r\n    }\r\n\r\n    draw_bar() {\r\n        this.$bar = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar',\r\n            append_to: this.bar_group,\r\n        });\r\n\r\n        animateSVG(this.$bar, 'width', 0, this.width);\r\n\r\n        if (this.invalid) {\r\n            this.$bar.classList.add('bar-invalid');\r\n        }\r\n    }\r\n\r\n    draw_progress_bar() {\r\n        if (this.invalid) return;\r\n        this.$bar_progress = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.progress_width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar-progress',\r\n            append_to: this.bar_group,\r\n        });\r\n\r\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\r\n    }\r\n\r\n    draw_label() {\r\n        createSVG('text', {\r\n            x: this.x + this.width / 2,\r\n            y: this.y + this.height / 2,\r\n            innerHTML: this.task.name,\r\n            class: 'bar-label',\r\n            append_to: this.bar_group,\r\n        });\r\n        // labels get BBox in the next tick\r\n        requestAnimationFrame(() => this.update_label_position());\r\n    }\r\n\r\n    draw_resize_handles() {\r\n        if (this.invalid) return;\r\n\r\n        const bar = this.$bar;\r\n        const handle_width = 8;\r\n\r\n        createSVG('rect', {\r\n            x: bar.getX() + bar.getWidth() - 9,\r\n            y: bar.getY() + 1,\r\n            width: handle_width,\r\n            height: this.height - 2,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'handle right',\r\n            append_to: this.handle_group,\r\n        });\r\n\r\n        createSVG('rect', {\r\n            x: bar.getX() + 1,\r\n            y: bar.getY() + 1,\r\n            width: handle_width,\r\n            height: this.height - 2,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'handle left',\r\n            append_to: this.handle_group,\r\n        });\r\n\r\n        if (this.task.progress && this.task.progress < 100) {\r\n            this.$handle_progress = createSVG('polygon', {\r\n                points: this.get_progress_polygon_points().join(','),\r\n                class: 'handle progress',\r\n                append_to: this.handle_group,\r\n            });\r\n        }\r\n    }\r\n\r\n    get_progress_polygon_points() {\r\n        const bar_progress = this.$bar_progress;\r\n        return [\r\n            bar_progress.getEndX() - 5,\r\n            bar_progress.getY() + bar_progress.getHeight(),\r\n            bar_progress.getEndX() + 5,\r\n            bar_progress.getY() + bar_progress.getHeight(),\r\n            bar_progress.getEndX(),\r\n            bar_progress.getY() + bar_progress.getHeight() - 8.66,\r\n        ];\r\n    }\r\n\r\n    bind() {\r\n        if (this.invalid) return;\r\n        this.setup_click_event();\r\n    }\r\n\r\n    setup_click_event() {\r\n        $.on(this.group, 'focus ' + this.gantt.options.popup_trigger, (e) => {\r\n            if (this.action_completed) {\r\n                // just finished a move action, wait for a few seconds\r\n                return;\r\n            }\r\n\r\n            this.show_popup();\r\n            this.gantt.unselect_all();\r\n            this.group.classList.add('active');\r\n        });\r\n\r\n        $.on(this.group, 'dblclick', (e) => {\r\n            if (this.action_completed) {\r\n                // just finished a move action, wait for a few seconds\r\n                return;\r\n            }\r\n\r\n            this.gantt.trigger_event('click', [this.task]);\r\n        });\r\n    }\r\n\r\n    show_popup() {\r\n        if (this.gantt.bar_being_dragged) return;\r\n\r\n        const start_date = date_utils.format(\r\n            this.task._start,\r\n            'MMM D',\r\n            this.gantt.options.language\r\n        );\r\n        const end_date = date_utils.format(\r\n            date_utils.add(this.task._end, -1, 'second'),\r\n            'MMM D',\r\n            this.gantt.options.language\r\n        );\r\n        const subtitle = start_date + ' - ' + end_date;\r\n\r\n        this.gantt.show_popup({\r\n            target_element: this.$bar,\r\n            title: this.task.name,\r\n            subtitle: subtitle,\r\n            task: this.task,\r\n        });\r\n        this.gantt.handle_selected(this.task);\r\n    }\r\n\r\n    update_bar_position({ x = null, width = null }) {\r\n        const bar = this.$bar;\r\n        if (x) {\r\n            // get all x values of parent task\r\n            const xs = this.task.dependencies.map((dep) => {\r\n                return this.gantt.get_bar(dep).$bar.getX();\r\n            });\r\n            // child task must not go before parent\r\n            const valid_x = xs.reduce((prev, curr) => {\r\n                return x >= curr;\r\n            }, x);\r\n            if (!valid_x) {\r\n                width = null;\r\n                return;\r\n            }\r\n            this.update_attr(bar, 'x', x);\r\n        }\r\n        if (width && width >= this.gantt.options.column_width) {\r\n            this.update_attr(bar, 'width', width);\r\n        }\r\n        this.update_label_position();\r\n        this.update_handle_position();\r\n        this.update_progressbar_position();\r\n        this.update_arrow_position();\r\n    }\r\n\r\n    date_changed() {\r\n        let changed = false;\r\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\r\n\r\n        if (Number(this.task._start) !== Number(new_start_date)) {\r\n            changed = true;\r\n            this.task._start = new_start_date;\r\n        }\r\n\r\n        if (Number(this.task._end) !== Number(new_end_date)) {\r\n            changed = true;\r\n            this.task._end = new_end_date;\r\n        }\r\n\r\n        if (!changed) return;\r\n\r\n        this.gantt.trigger_event('date_change', [\r\n            this.task,\r\n            new_start_date,\r\n            date_utils.add(new_end_date, -1, 'second'),\r\n        ]);\r\n    }\r\n\r\n    progress_changed() {\r\n        const new_progress = this.compute_progress();\r\n        this.task.progress = new_progress;\r\n        this.gantt.trigger_event('progress_change', [this.task, new_progress]);\r\n    }\r\n\r\n    set_action_completed() {\r\n        this.action_completed = true;\r\n        setTimeout(() => (this.action_completed = false), 1000);\r\n    }\r\n\r\n    compute_start_end_date() {\r\n        const bar = this.$bar;\r\n        const x_in_units = bar.getX() / this.gantt.options.column_width;\r\n        const new_start_date = date_utils.add(\r\n            this.gantt.gantt_start,\r\n            x_in_units * this.gantt.options.step,\r\n            'hour'\r\n        );\r\n        const width_in_units = bar.getWidth() / this.gantt.options.column_width;\r\n        const new_end_date = date_utils.add(\r\n            new_start_date,\r\n            width_in_units * this.gantt.options.step,\r\n            'hour'\r\n        );\r\n\r\n        return { new_start_date, new_end_date };\r\n    }\r\n\r\n    compute_progress() {\r\n        const progress =\r\n            (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\r\n        return parseInt(progress, 10);\r\n    }\r\n\r\n    compute_x() {\r\n        const { step, column_width } = this.gantt.options;\r\n        const task_start = this.task._start;\r\n        const gantt_start = this.gantt.gantt_start;\r\n\r\n        const diff = date_utils.diff(task_start, gantt_start, 'hour');\r\n        let x = (diff / step) * column_width;\r\n\r\n        if (this.gantt.view_is('Month')) {\r\n            const diff = date_utils.diff(task_start, gantt_start, 'day');\r\n            x = (diff * column_width) / 30;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    compute_y() {\r\n        return (\r\n            this.gantt.options.header_height +\r\n            this.gantt.options.padding +\r\n            this.task._index * (this.height + this.gantt.options.padding)\r\n        );\r\n    }\r\n\r\n    get_snap_position(dx) {\r\n        let odx = dx,\r\n            rem,\r\n            position;\r\n\r\n        if (this.gantt.view_is('Week')) {\r\n            rem = dx % (this.gantt.options.column_width / 7);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 14\r\n                    ? 0\r\n                    : this.gantt.options.column_width / 7);\r\n        } else if (this.gantt.view_is('Month')) {\r\n            rem = dx % (this.gantt.options.column_width / 30);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 60\r\n                    ? 0\r\n                    : this.gantt.options.column_width / 30);\r\n        } else {\r\n            rem = dx % this.gantt.options.column_width;\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 2\r\n                    ? 0\r\n                    : this.gantt.options.column_width);\r\n        }\r\n        return position;\r\n    }\r\n\r\n    update_attr(element, attr, value) {\r\n        value = +value;\r\n        if (!isNaN(value)) {\r\n            element.setAttribute(attr, value);\r\n        }\r\n        return element;\r\n    }\r\n\r\n    update_progressbar_position() {\r\n        if (this.invalid) return;\r\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\r\n        this.$bar_progress.setAttribute(\r\n            'width',\r\n            this.$bar.getWidth() * (this.task.progress / 100)\r\n        );\r\n    }\r\n\r\n    update_label_position() {\r\n        const bar = this.$bar,\r\n            label = this.group.querySelector('.bar-label');\r\n\r\n        if (label.getBBox().width > bar.getWidth()) {\r\n            label.classList.add('big');\r\n            label.setAttribute('x', bar.getX() + bar.getWidth() + 5);\r\n        } else {\r\n            label.classList.remove('big');\r\n            label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\r\n        }\r\n    }\r\n\r\n    update_handle_position() {\r\n        if (this.invalid) return;\r\n        const bar = this.$bar;\r\n        this.handle_group\r\n            .querySelector('.handle.left')\r\n            .setAttribute('x', bar.getX() + 1);\r\n        this.handle_group\r\n            .querySelector('.handle.right')\r\n            .setAttribute('x', bar.getEndX() - 9);\r\n        const handle = this.group.querySelector('.handle.progress');\r\n        handle &&\r\n            handle.setAttribute('points', this.get_progress_polygon_points());\r\n    }\r\n\r\n    update_arrow_position() {\r\n        this.arrows = this.arrows || [];\r\n        for (let arrow of this.arrows) {\r\n            arrow.update();\r\n        }\r\n    }\r\n}\r\n\r\nfunction isFunction(functionToCheck) {\r\n    var getType = {};\r\n    return (\r\n        functionToCheck &&\r\n        getType.toString.call(functionToCheck) === '[object Function]'\r\n    );\r\n}\r\n","import { createSVG } from './svg_utils';\r\n\r\nexport default class Arrow {\r\n    constructor(gantt, from_task, to_task) {\r\n        this.gantt = gantt;\r\n        this.from_task = from_task;\r\n        this.to_task = to_task;\r\n\r\n        this.calculate_path();\r\n        this.draw();\r\n    }\r\n\r\n    calculate_path() {\r\n        let start_x =\r\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\r\n\r\n        const condition = () =>\r\n            this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\r\n            start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\r\n\r\n        while (condition()) {\r\n            start_x -= 10;\r\n        }\r\n\r\n        const start_y =\r\n            this.gantt.options.header_height +\r\n            this.gantt.options.bar_height +\r\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\r\n                this.from_task.task._index +\r\n            this.gantt.options.padding;\r\n\r\n        const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\r\n        const end_y =\r\n            this.gantt.options.header_height +\r\n            this.gantt.options.bar_height / 2 +\r\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\r\n                this.to_task.task._index +\r\n            this.gantt.options.padding;\r\n\r\n        const from_is_below_to =\r\n            this.from_task.task._index > this.to_task.task._index;\r\n        const curve = this.gantt.options.arrow_curve;\r\n        const clockwise = from_is_below_to ? 1 : 0;\r\n        const curve_y = from_is_below_to ? -curve : curve;\r\n        const offset = from_is_below_to\r\n            ? end_y + this.gantt.options.arrow_curve\r\n            : end_y - this.gantt.options.arrow_curve;\r\n\r\n        this.path = `\r\n            M ${start_x} ${start_y}\r\n            V ${offset}\r\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n            L ${end_x} ${end_y}\r\n            m -5 -5\r\n            l 5 5\r\n            l -5 5`;\r\n\r\n        if (\r\n            this.to_task.$bar.getX() <\r\n            this.from_task.$bar.getX() + this.gantt.options.padding\r\n        ) {\r\n            const down_1 = this.gantt.options.padding / 2 - curve;\r\n            const down_2 =\r\n                this.to_task.$bar.getY() +\r\n                this.to_task.$bar.getHeight() / 2 -\r\n                curve_y;\r\n            const left = this.to_task.$bar.getX() - this.gantt.options.padding;\r\n\r\n            this.path = `\r\n                M ${start_x} ${start_y}\r\n                v ${down_1}\r\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\r\n                H ${left}\r\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\r\n                V ${down_2}\r\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n                L ${end_x} ${end_y}\r\n                m -5 -5\r\n                l 5 5\r\n                l -5 5`;\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        this.element = createSVG('path', {\r\n            d: this.path,\r\n            'data-from': this.from_task.task.id,\r\n            'data-to': this.to_task.task.id,\r\n        });\r\n    }\r\n\r\n    update() {\r\n        this.calculate_path();\r\n        this.element.setAttribute('d', this.path);\r\n    }\r\n}\r\n","export default class Popup {\r\n    constructor(parent, custom_html) {\r\n        this.parent = parent;\r\n        this.custom_html = custom_html;\r\n        this.make();\r\n    }\r\n\r\n    make() {\r\n        this.parent.innerHTML = `\r\n            <div class=\"title\"></div>\r\n            <div class=\"subtitle\"></div>\r\n            <div class=\"pointer\"></div>\r\n        `;\r\n\r\n        this.hide();\r\n\r\n        this.title = this.parent.querySelector('.title');\r\n        this.subtitle = this.parent.querySelector('.subtitle');\r\n        this.pointer = this.parent.querySelector('.pointer');\r\n    }\r\n\r\n    show(options) {\r\n        if (!options.target_element) {\r\n            throw new Error('target_element is required to show popup');\r\n        }\r\n        if (!options.position) {\r\n            options.position = 'left';\r\n        }\r\n        const target_element = options.target_element;\r\n\r\n        if (this.custom_html) {\r\n            let html = this.custom_html(options.task);\r\n            html += '<div class=\"pointer\"></div>';\r\n            this.parent.innerHTML = html;\r\n            this.pointer = this.parent.querySelector('.pointer');\r\n        } else {\r\n            // set data\r\n            this.title.innerHTML = options.title;\r\n            this.subtitle.innerHTML = options.subtitle;\r\n            this.parent.style.width = this.parent.clientWidth + 'px';\r\n        }\r\n\r\n        // set position\r\n        let position_meta;\r\n        if (target_element instanceof HTMLElement) {\r\n            position_meta = target_element.getBoundingClientRect();\r\n        } else if (target_element instanceof SVGElement) {\r\n            position_meta = options.target_element.getBBox();\r\n        }\r\n\r\n        if (options.position === 'left') {\r\n            this.parent.style.left =\r\n                position_meta.x + (position_meta.width + 10) + 'px';\r\n            this.parent.style.top = position_meta.y + 'px';\r\n\r\n            this.pointer.style.transform = 'rotateZ(90deg)';\r\n            this.pointer.style.left = '-7px';\r\n            this.pointer.style.top = '2px';\r\n        }\r\n\r\n        // show\r\n        this.parent.style.opacity = 1;\r\n    }\r\n\r\n    hide() {\r\n        this.parent.style.opacity = 0;\r\n        this.parent.style.left = 0;\r\n    }\r\n}\r\n","import { $ } from './svg_utils';\n\nexport default class Table {\n    dragStartY = 0;\n    constructor(gantt, columns) {\n        this.set_defaults(gantt, columns);\n    }\n\n    set_defaults(gantt, columns) {\n        this.gantt = gantt;\n        this.columns = columns;\n    }\n\n    draw_draggable_col(el) {\n        const $el = document.createElement(el);\n\n        if (el === 'td') {\n            $el.innerHTML = `<i class=\"fa fa-sort\"></i>`;\n            $el.className = 'draggable-item';\n        }\n\n        return $el;\n    }\n\n    draw_table_header() {\n        const $thead = document.createElement('thead');\n        const $tr = document.createElement('tr');\n\n        $tr.appendChild(this.draw_draggable_col('th'));\n\n        this.columns.forEach((column) => {\n            const $th = document.createElement('th');\n            $th.textContent = column.title;\n\n            $tr.appendChild($th);\n        });\n\n        $thead.appendChild($tr);\n        $thead.classList.add('table-header');\n\n        $.style($tr, 'height', this.gantt.options.header_height + 9 + 'px');\n\n        return $thead;\n    }\n\n    get_parentNode(tag, target) {\n        if (target.tagName === tag.toUpperCase()) return target;\n        return this.get_parentNode(tag, target.parentNode);\n    }\n\n    draw_table_body(tasks) {\n        this.tasks = this.gantt.setGroupPosition(tasks);\n\n        const $tbody = document.createElement('tbody');\n        $tbody.classList.add('table-body');\n\n        this.make_table_row().forEach((row) => $tbody.append(row));\n\n        $tbody.addEventListener('mousedown', (e) => {\n            const $td = this.get_parentNode('td', e.target);\n\n            $td.classList.contains('draggable-item') &&\n                this.bind_draggable_event($tbody);\n        });\n\n        return $tbody;\n    }\n\n    isRowLine(id) {\n        if (id <= 2) return false;\n        const target = this.tasks.find((t) => t.id === `${id}`);\n\n        return !target.groupPosition.includes('last');\n    }\n\n    make_table_row() {\n        return this.tasks.map((task, index) => {\n            const deps = task.level - 1;\n            const $tr = document.createElement('tr');\n            $tr.setAttribute('draggable', 'true');\n            $tr.setAttribute('data-id', task.id);\n            $.style($tr, {\n                height:\n                    this.gantt.options.bar_height +\n                    this.gantt.options.padding +\n                    'px',\n            });\n\n            $tr.appendChild(this.draw_draggable_col('td'));\n\n            if (deps === 1 && task.groupPosition.includes('last')) {\n                $tr.classList.add('root-last');\n            }\n\n            this.columns.forEach((column) => {\n                const $td = document.createElement('td');\n                const { data, render } = column;\n\n                if (data === 'name' && task.level > 1) {\n                    $td.setAttribute('rel', task.type);\n                    $td.className = `work-name indent-${deps} indent-${deps}-${task.groupPosition[0]}`;\n\n                    if (task.groupPosition[1]) {\n                        $td.classList.add(\n                            `indent-${deps}-${task.groupPosition[1]}`\n                        );\n                    }\n\n                    if (task.type !== 'default') {\n                        $td.classList.add(task.closed ? 'closed' : 'opened');\n                    }\n\n                    for (let i = 0; i < deps; i++) {\n                        const $ins = document.createElement('ins');\n                        $ins.textContent = '';\n\n                        this.isRowLine(task.parentId) &&\n                            $ins.classList.add('row-line');\n\n                        if (deps === 1 || i === deps - 2) {\n                            $ins.classList.add('marker');\n\n                            deps > 1 && $ins.classList.add('row-line');\n\n                            $td.append($ins);\n                            break;\n                        }\n\n                        $td.append($ins);\n                    }\n                }\n\n                if (render) {\n                    const child_node = render(task[data], task);\n                    $td.append(child_node);\n                } else {\n                    const text = document.createTextNode(task[data] ?? '');\n                    $td.append(text);\n                }\n\n                $tr.append($td);\n            });\n\n            $tr.addEventListener('mousedown', (e) => {\n                const $td = this.get_parentNode('td', e.target);\n\n                if ($td.classList.contains('draggable-item')) {\n                    $tr.addEventListener('dragstart', (e) => {\n                        e.target.classList.add('dragging');\n                    });\n\n                    $tr.addEventListener('dragend', (e) => {\n                        e.target.classList.remove('dragging');\n                    });\n                }\n            });\n\n            return $tr;\n        });\n    }\n\n    get_drag_after_element(container, y) {\n        const draggableElements = [\n            ...container.querySelectorAll('tr:not(.dragging)'),\n        ];\n\n        return draggableElements.reduce(\n            (closest, child) => {\n                const box = child.getBoundingClientRect();\n                const offset = y - box.top - box.height / 2;\n                if (offset < 0 && offset > closest.offset) {\n                    return { offset: offset, element: child };\n                } else {\n                    return closest;\n                }\n            },\n            { offset: Number.NEGATIVE_INFINITY }\n        ).element;\n    }\n\n    find_task_item(id) {\n        return this.tasks.find((t) => t.id === id);\n    }\n\n    bind_draggable_event($tbody) {\n        $tbody.addEventListener('dragover', (e) => {\n            e.preventDefault();\n            if (!this.dragStartY) this.dragStartY = e.clientY;\n\n            this.draggableEl = document.querySelector('.dragging');\n            this.afterElement = this.get_drag_after_element($tbody, e.clientY);\n\n            $tbody.insertBefore(this.draggableEl, this.afterElement);\n        });\n\n        $tbody.addEventListener('drop', async (e) => {\n            e.preventDefault();\n            const targetItem = this.find_task_item(\n                this.get_parentNode('tr', e.target).getAttribute('data-id')\n            );\n            const dragItem = this.find_task_item(\n                this.draggableEl.getAttribute('data-id')\n            );\n            const afterItem = this.find_task_item(\n                this.afterElement.getAttribute('data-id')\n            );\n\n            const params = {\n                c_id: dragItem.id,\n                ref: afterItem.parentId,\n                c_position:\n                    e.clientY > this.dragStartY\n                        ? afterItem.position - 1\n                        : afterItem.position,\n                level: afterItem.level,\n                p_position: dragItem.position,\n                p_parentId: dragItem.parentId,\n            };\n\n            if (targetItem.type !== 'default') {\n                const arr = this.tasks.filter(\n                    (t) => t.parentId === Number(targetItem.id)\n                ).length;\n                params.ref = targetItem.id;\n                params.level = targetItem.level + 1;\n                params.c_position = arr ? arr : 0;\n            }\n\n            this.dragStartY = 0;\n            this.gantt.draggble_rerender(params);\n            this.gantt.trigger_event('drag_row', [params]);\n        });\n    }\n}\n","import { $ } from './svg_utils';\r\n\r\nexport default class Split {\r\n    constructor(wrapper) {\r\n        this.draw_split_bar(wrapper);\r\n    }\r\n\r\n    draw_split_bar(elem) {\r\n        const $split_bar = document.createElement('div');\r\n        $split_bar.classList.add('split-bar');\r\n\r\n        let x = 0;\r\n\r\n        const mouseDownHandler = function (e) {\r\n            x = e.clientX;\r\n\r\n            document.addEventListener('mousemove', mouseMoveHandler);\r\n            document.addEventListener('mouseup', mouseUpHandler);\r\n        };\r\n\r\n        const mouseMoveHandler = function (e) {\r\n            const $table = $split_bar.previousElementSibling;\r\n            const $gantt = $split_bar.nextSibling;\r\n\r\n            const dx = e.clientX - x;\r\n            const left =\r\n                (Math.max(\r\n                    0,\r\n                    Math.min($split_bar.offsetLeft + dx, elem.clientWidth)\r\n                ) /\r\n                    elem.clientWidth) *\r\n                100;\r\n\r\n            $.style($split_bar, { left: `${left}%` });\r\n            $.style($table, { 'flex-basis': `${left}%` });\r\n            $.style($gantt, { 'flex-basis': `${100 - left}%` });\r\n            $.style($table, { 'overflow-x': 'hidden' });\r\n            $.style($gantt, { 'overflow-x': 'hidden' });\r\n\r\n            x = e.clientX;\r\n        };\r\n\r\n        const mouseUpHandler = function () {\r\n            const $table = $split_bar.previousElementSibling;\r\n            const $gantt = $split_bar.nextSibling;\r\n\r\n            document.removeEventListener('mousemove', mouseMoveHandler);\r\n            document.removeEventListener('mouseup', mouseUpHandler);\r\n\r\n            $.style($table, { 'overflow-x': 'auto' });\r\n            $.style($gantt, { 'overflow-x': 'auto' });\r\n        };\r\n\r\n        $split_bar.addEventListener('mousedown', mouseDownHandler);\r\n        elem.prepend($split_bar);\r\n    }\r\n}\r\n","import date_utils from './date_utils';\nimport { $, createSVG } from './svg_utils';\nimport Bar from './bar';\nimport Arrow from './arrow';\nimport Popup from './popup';\nimport Table from './table';\nimport Split from './split';\n\nimport './gantt.scss';\n\nconst VIEW_MODE = {\n    QUARTER_DAY: 'Quarter Day',\n    HALF_DAY: 'Half Day',\n    DAY: 'Day',\n    WEEK: 'Week',\n    MONTH: 'Month',\n    YEAR: 'Year',\n};\n\nexport default class Gantt {\n    constructor(wrapper, tasks, options, contents) {\n        this.originTasks = tasks;\n\n        this.setup_options(options);\n        this.setup_tasks(tasks);\n\n        this.setup_wrapper(wrapper);\n\n        // initialize with default view mode\n        this.change_view_mode();\n        this.setup_split_bar();\n        this.setup_table(contents);\n\n        this.bind_events();\n    }\n\n    setup_wrapper(element) {\n        let svg_element;\n        let wrapper_element;\n\n        // CSS Selector is passed\n        if (typeof element === 'string') {\n            element = document.querySelector(element);\n        }\n\n        // get the SVGElement\n        if (element instanceof HTMLElement) {\n            wrapper_element = element;\n            svg_element = element.querySelector('svg');\n        } else if (element instanceof SVGElement) {\n            svg_element = element;\n        } else {\n            throw new TypeError(\n                'Frappé Gantt only supports usage of a string CSS selector,' +\n                    \" HTML DOM element or SVG DOM element for the 'element' parameter\"\n            );\n        }\n\n        // svg element\n        if (!svg_element) {\n            // create it\n            this.$svg = createSVG('svg', {\n                append_to: wrapper_element,\n                class: 'gantt',\n            });\n        } else {\n            this.$svg = svg_element;\n            this.$svg.classList.add('gantt');\n        }\n\n        this.$wrapper = document.createElement('div');\n        this.$wrapper.classList.add('wrapper');\n\n        // wrapper element\n        this.$container = document.createElement('div');\n        this.$container.classList.add('gantt-container');\n\n        const parent_element = this.$svg.parentElement;\n        element.appendChild(this.setup_mode_handler());\n        parent_element.appendChild(this.$wrapper);\n        this.$wrapper.appendChild(this.$container);\n        this.$container.appendChild(this.$svg);\n\n        // popup wrapper\n        this.popup_wrapper = document.createElement('div');\n        this.popup_wrapper.classList.add('popup-wrapper');\n        this.$container.appendChild(this.popup_wrapper);\n    }\n\n    setup_mode_handler() {\n        const wrapper = document.createElement('div');\n        const excel_export = document.createElement('button');\n        const btn_group = document.createElement('div');\n\n        wrapper.className = 'mt well well-sm clearfix';\n        excel_export.className = 'btn btn-default btn-sm mr-xs';\n\n        excel_export.innerText = 'Excel';\n\n        $.style(btn_group, { float: 'right' });\n\n        Object.keys(VIEW_MODE).forEach((key) => {\n            const btn = document.createElement('button');\n            btn.className = `btn btn-default btn-sm mr-xs ${\n                VIEW_MODE[key] === this.options.view_mode ? 'active' : ''\n            }`;\n            btn.innerText = VIEW_MODE[key];\n            btn.addEventListener('click', (e) => {\n                e.target.classList.add('active');\n                e.target.parentNode.childNodes.forEach((b) =>\n                    b.classList.remove('active')\n                );\n\n                this.change_view_mode(VIEW_MODE[key]);\n            });\n\n            btn_group.appendChild(btn);\n        });\n\n        wrapper.append(excel_export);\n        wrapper.append(btn_group);\n\n        return wrapper;\n    }\n\n    setup_options(options) {\n        const default_options = {\n            header_height: 50,\n            column_width: 30,\n            step: 24,\n            view_modes: [...Object.values(VIEW_MODE)],\n            bar_height: 20,\n            bar_corner_radius: 3,\n            arrow_curve: 5,\n            padding: 18,\n            view_mode: 'Day',\n            date_format: 'YYYY-MM-DD',\n            popup_trigger: 'click',\n            custom_popup_html: null,\n            language: 'ko',\n        };\n        this.options = Object.assign({}, default_options, options);\n    }\n\n    setup_tasks(tasks) {\n        // prepare tasks\n        this.tasks = this.sort_tasks(tasks).map((task, i) => {\n            // convert to Date objects\n            task._start = date_utils.parse(task.start);\n            task._end = date_utils.parse(task.end);\n\n            // make task invalid if duration too large\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\n                task.end = null;\n            }\n\n            // cache index\n            task._index = i;\n\n            // invalid dates\n            if (!task.start && !task.end) {\n                const today = date_utils.today();\n                task._start = today;\n                task._end = date_utils.add(today, 2, 'day');\n            }\n\n            if (!task.start && task.end) {\n                task._start = date_utils.add(task._end, -2, 'day');\n            }\n\n            if (task.start && !task.end) {\n                task._end = date_utils.add(task._start, 2, 'day');\n            }\n\n            // if hours is not set, assume the last day is full day\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n            const task_end_values = date_utils.get_date_values(task._end);\n            if (task_end_values.slice(3).every((d) => d === 0)) {\n                task._end = date_utils.add(task._end, 24, 'hour');\n            }\n\n            // invalid flag\n            if (!task.start || !task.end) {\n                task.invalid = true;\n            }\n\n            // dependencies\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\n                let deps = [];\n                if (task.dependencies) {\n                    deps = task.dependencies\n                        .split(',')\n                        .map((d) => d.trim())\n                        .filter((d) => d);\n                }\n                task.dependencies = deps;\n            }\n\n            // uids\n            if (!task.id) {\n                task.id = generate_id(task);\n            }\n\n            return task;\n        });\n\n        this.setup_dependencies();\n    }\n\n    setup_dependencies() {\n        this.dependency_map = {};\n        for (let t of this.tasks) {\n            for (let d of t.dependencies) {\n                this.dependency_map[d] = this.dependency_map[d] || [];\n                this.dependency_map[d].push(t.id);\n            }\n        }\n    }\n\n    refresh(tasks) {\n        this.setup_tasks(tasks);\n        this.change_view_mode();\n        this.rerender_table();\n        this.originTasks = tasks;\n    }\n\n    change_view_mode(mode = this.options.view_mode) {\n        this.update_view_scale(mode);\n        this.setup_dates();\n        this.render();\n        // fire viewmode_change event\n        this.trigger_event('view_change', [mode]);\n    }\n\n    update_view_scale(view_mode) {\n        this.options.view_mode = view_mode;\n\n        if (view_mode === VIEW_MODE.DAY) {\n            this.options.step = 24;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\n            this.options.step = 24 / 2;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n            this.options.step = 24 / 4;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.WEEK) {\n            this.options.step = 24 * 7;\n            this.options.column_width = 140;\n        } else if (view_mode === VIEW_MODE.MONTH) {\n            this.options.step = 24 * 30;\n            this.options.column_width = 120;\n        } else if (view_mode === VIEW_MODE.YEAR) {\n            this.options.step = 24 * 365;\n            this.options.column_width = 120;\n        }\n    }\n\n    setup_dates() {\n        this.setup_gantt_dates();\n        this.setup_date_values();\n    }\n\n    setup_gantt_dates() {\n        this.gantt_start = this.gantt_end = null;\n\n        for (let task of this.tasks) {\n            // set global start and end date\n            if (!this.gantt_start || task._start < this.gantt_start) {\n                this.gantt_start = task._start;\n            }\n            if (!this.gantt_end || task._end > this.gantt_end) {\n                this.gantt_end = task._end;\n            }\n        }\n\n        this.gantt_start = date_utils.start_of(this.gantt_start, 'day');\n        this.gantt_end = date_utils.start_of(this.gantt_end, 'day');\n\n        // add date padding on both sides\n        if (this.view_is([VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\n            this.gantt_start = date_utils.add(this.gantt_start, -7, 'day');\n            this.gantt_end = date_utils.add(this.gantt_end, 7, 'day');\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            this.gantt_start = date_utils.start_of(this.gantt_start, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'year');\n        } else if (this.view_is(VIEW_MODE.YEAR)) {\n            this.gantt_start = date_utils.add(this.gantt_start, -2, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 2, 'year');\n        } else {\n            this.gantt_start = date_utils.add(this.gantt_start, -1, 'month');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'month');\n        }\n    }\n\n    setup_date_values() {\n        this.dates = [];\n        let cur_date = null;\n\n        while (cur_date === null || cur_date < this.gantt_end) {\n            if (!cur_date) {\n                cur_date = date_utils.clone(this.gantt_start);\n            } else {\n                if (this.view_is(VIEW_MODE.YEAR)) {\n                    cur_date = date_utils.add(cur_date, 1, 'year');\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\n                    cur_date = date_utils.add(cur_date, 1, 'month');\n                } else {\n                    cur_date = date_utils.add(\n                        cur_date,\n                        this.options.step,\n                        'hour'\n                    );\n                }\n            }\n            this.dates.push(cur_date);\n        }\n    }\n\n    bind_events() {\n        this.bind_grid_click();\n        this.bind_bar_events();\n        this.bind_scroll_event();\n    }\n\n    render() {\n        this.clear();\n        this.setup_layers();\n        this.make_grid();\n        this.make_grid_header();\n        this.make_dates();\n        this.make_bars();\n        this.make_arrows();\n        this.map_arrows_on_bars();\n        this.set_width();\n        this.set_scroll_position();\n    }\n\n    rerender_table() {\n        document.querySelector('.table-body')?.remove();\n\n        const $table_body = this.table.draw_table_body(this.tasks, {\n            height: this.options.bar_height + this.options.padding + 'px',\n        });\n\n        document\n            .querySelector('.table-container table')\n            .appendChild($table_body);\n\n        $table_body.addEventListener('click', (event) =>\n            this.bind_table_event(event)\n        );\n    }\n\n    draggble_rerender(item) {\n        this.update_origin_tasks(item);\n        this.render();\n        this.rerender_table();\n    }\n\n    sort_tasks(tasks) {\n        const sorted_tasks = [...tasks];\n        const children_idx_info = {};\n\n        sorted_tasks\n            .sort((a, b) => a.level - b.level || a.position - b.position)\n            .forEach((task, taskIdx) => {\n                if (task.parentId !== 2) {\n                    if (children_idx_info.hasOwnProperty(task.parentId)) {\n                        children_idx_info[task.parentId].push(taskIdx);\n                    } else {\n                        children_idx_info[task.parentId] = [taskIdx];\n                    }\n\n                    const parentIdx = sorted_tasks.findIndex(\n                        (item) => +item.id === task.parentId\n                    );\n\n                    sorted_tasks.splice(taskIdx, 1);\n                    sorted_tasks.splice(\n                        parentIdx + children_idx_info[task.parentId].length,\n                        0,\n                        task\n                    );\n                }\n            }, []);\n\n        return sorted_tasks;\n    }\n\n    setGroupPosition(data) {\n        return data.reduce((acc, cur) => {\n            const group = data.filter((t) => t.parentId === cur.parentId);\n\n            cur.groupPosition = [];\n\n            if (group[0].id === cur.id) {\n                cur.groupPosition.push('first');\n            }\n            if (group[group.length - 1].id === cur.id) {\n                cur.groupPosition.push('last');\n            }\n            if (!cur.groupPosition.length) {\n                cur.groupPosition.push('middle');\n            }\n\n            acc.push(cur);\n            return acc;\n        }, []);\n    }\n\n    update_dependecies(id) {\n        if (id === 2) return [];\n\n        const dependencies = this.tasks.find(\n            (task) => task.id === id\n        ).dependencies;\n\n        if (!dependencies.length) return [id];\n        return [...dependencies, id];\n    }\n\n    update_origin_tasks(item) {\n        let tasks = this.tasks.reduce((acc, cur) => {\n            if (cur.id === item.c_id) {\n                const dependencies = this.update_dependecies(item.ref);\n\n                cur = {\n                    ...cur,\n                    parentId: Number(item.ref),\n                    dependencies,\n                    position: item.c_position,\n                    level: item.level,\n                    wbs: dependencies.length\n                        ? `${dependencies.join('-')}-${item.c_id}`\n                        : `${item.c_id}`,\n                };\n            } else {\n                if (\n                    cur.parentId === Number(item.ref) &&\n                    item.c_position === item.p_position\n                ) {\n                    acc.push(cur);\n                    return acc;\n                }\n\n                if (cur.parentId === Number(item.ref)) {\n                    cur.position =\n                        item.c_position > item.p_position\n                            ? cur.position < item.p_position\n                                ? cur.position\n                                : cur.position <= item.c_position\n                                ? cur.position - 1\n                                : cur.position\n                            : cur.position > item.p_position\n                            ? cur.position\n                            : cur.position >= item.c_position\n                            ? cur.position + 1\n                            : cur.position;\n                } else {\n                    if (cur.parentId === item.p_parentId) {\n                        cur.position =\n                            cur.position < item.p_position\n                                ? cur.position\n                                : cur.position - 1;\n                    }\n                }\n            }\n\n            acc.push(cur);\n            return acc;\n        }, []);\n\n        tasks = this.setGroupPosition(tasks);\n\n        this.setup_tasks(tasks);\n        this.originTasks = tasks;\n    }\n\n    setup_layers() {\n        this.layers = {};\n        const layers = [\n            'grid',\n            'arrow',\n            'progress',\n            'bar',\n            'details',\n            'header',\n            'date',\n        ];\n        // make group layers\n        for (let layer of layers) {\n            this.layers[layer] = createSVG('g', {\n                class: layer,\n                append_to: this.$svg,\n            });\n        }\n    }\n\n    setup_split_bar() {\n        this.split = new Split(this.$wrapper);\n    }\n\n    setup_table(contents, handler) {\n        this.table = new Table(this, contents, handler);\n        this.make_table();\n    }\n\n    bind_table_event(event) {\n        const $tr = event.target.closest('tr');\n        const id = $tr.dataset.id;\n\n        if (\n            event.target.tagName !== 'INS' &&\n            !event.target.classList.contains('marker')\n        ) {\n            const task = this.get_task(id);\n\n            this.handle_selected(task);\n\n            return;\n        }\n\n        const $target = event.target.closest('td');\n\n        if (\n            $target.getAttribute('rel') === 'folder' ||\n            $target.getAttribute('rel') === 'drive'\n        ) {\n            let tasks = [...this.tasks];\n\n            if ($target.classList.contains('closed')) {\n                this.originTasks.forEach((task) => {\n                    if (task.id === id) {\n                        delete task.closed;\n                        return tasks.splice(task._index, 1, task);\n                    }\n\n                    if (task.dependencies.includes(id))\n                        tasks.splice(task._index, 0, task);\n                });\n            } else {\n                tasks = this.tasks.reduce((acc, task) => {\n                    if (task.id === id) {\n                        return [...acc, { ...task, closed: true }];\n                    }\n\n                    if (!task.dependencies.includes(id)) {\n                        return [...acc, task];\n                    }\n\n                    return acc;\n                }, []);\n            }\n\n            this.setup_tasks(tasks);\n            this.render();\n            this.rerender_table();\n        }\n    }\n\n    make_table() {\n        const $table_container = document.createElement('div');\n        const $table = document.createElement('table');\n\n        $table_container.className = 'table-container';\n\n        const $table_header = this.table.draw_table_header();\n        const $table_body = this.table.draw_table_body(this.tasks);\n\n        $table.append($table_header);\n        $table.append($table_body);\n\n        $table_body.addEventListener('click', (event) =>\n            this.bind_table_event(event)\n        );\n\n        $table_container.append($table);\n\n        this.$wrapper.prepend($table_container);\n    }\n\n    make_grid() {\n        this.make_grid_background();\n        this.make_grid_rows();\n        this.make_grid_ticks();\n        this.make_grid_highlights();\n    }\n\n    handle_selected(task) {\n        const $tr = this.$wrapper.querySelectorAll('tr')[task._index + 1];\n        const $grid_row =\n            this.$wrapper.querySelectorAll('.grid-row')[task._index];\n\n        if (!$tr.classList.contains('selected')) {\n            Array.prototype.forEach.call(\n                this.$wrapper.querySelectorAll('.selected'),\n                (elem) => elem.classList.remove('selected')\n            );\n        }\n\n        $tr?.classList.toggle('selected');\n        $grid_row?.classList.toggle('selected');\n    }\n\n    make_grid_background() {\n        const grid_width = this.dates.length * this.options.column_width;\n        const grid_height =\n            this.options.header_height +\n            this.options.padding +\n            (this.options.bar_height + this.options.padding) *\n                this.tasks.length;\n\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: grid_width,\n            height: grid_height,\n            class: 'grid-background',\n            append_to: this.layers.grid,\n        });\n\n        $.attr(this.$svg, {\n            height: grid_height,\n            width: '100%',\n        });\n    }\n\n    make_grid_rows() {\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\n        // const lines_layer = createSVG('g', { append_to: this.layers.grid });\n\n        const row_width = this.dates.length * this.options.column_width;\n        const row_height = this.options.bar_height + this.options.padding;\n\n        let row_y = this.options.header_height + this.options.padding / 2;\n\n        for (let task of this.tasks) {\n            createSVG('rect', {\n                x: 0,\n                y: row_y,\n                width: row_width,\n                height: row_height,\n                class: 'grid-row',\n                append_to: rows_layer,\n            });\n\n            // createSVG('line', {\n            //     x1: 0,\n            //     y1: row_y + row_height,\n            //     x2: row_width,\n            //     y2: row_y + row_height,\n            //     class: 'row-line',\n            //     append_to: lines_layer,\n            // });\n\n            row_y += this.options.bar_height + this.options.padding;\n        }\n    }\n\n    make_grid_header() {\n        const header_width = this.dates.length * this.options.column_width;\n        const header_height = this.options.header_height + 10;\n\n        const pageScroll = window.scrollY;\n        const originOffset =\n            pageScroll + this.$wrapper.getBoundingClientRect().top;\n\n        if (originOffset <= pageScroll) {\n            this.layers.header.style.transform = `translate(0px, ${Math.floor(\n                window.scrollY - originOffset\n            )}px)`;\n        }\n\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: header_width,\n            height: header_height,\n            class: 'grid-header',\n            append_to: this.layers.header,\n        });\n    }\n\n    make_grid_ticks() {\n        let tick_x = 0;\n        let tick_y = this.options.header_height + this.options.padding / 2;\n        let tick_height =\n            (this.options.bar_height + this.options.padding) *\n            this.tasks.length;\n\n        for (let date of this.dates) {\n            let tick_class = 'tick';\n            // thick tick for monday\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n                tick_class += ' thick';\n            }\n            // thick tick for first week\n            if (\n                this.view_is(VIEW_MODE.WEEK) &&\n                date.getDate() >= 1 &&\n                date.getDate() < 8\n            ) {\n                tick_class += ' thick';\n            }\n            // thick ticks for quarters\n            if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n                tick_class += ' thick';\n            }\n\n            createSVG('path', {\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n                class: tick_class,\n                append_to: this.layers.grid,\n            });\n\n            if (this.view_is(VIEW_MODE.MONTH)) {\n                tick_x +=\n                    (date_utils.get_days_in_month(date) *\n                        this.options.column_width) /\n                    30;\n            } else {\n                tick_x += this.options.column_width;\n            }\n        }\n    }\n\n    make_grid_highlights() {\n        // highlight today's date\n        if (this.view_is(VIEW_MODE.DAY)) {\n            const x =\n                (date_utils.diff(date_utils.today(), this.gantt_start, 'hour') /\n                    this.options.step) *\n                this.options.column_width;\n            const y = 0;\n\n            const width = this.options.column_width;\n            const height =\n                (this.options.bar_height + this.options.padding) *\n                    this.tasks.length +\n                this.options.header_height +\n                this.options.padding / 2;\n\n            createSVG('rect', {\n                x,\n                y,\n                width,\n                height,\n                class: 'today-highlight',\n                append_to: this.layers.grid,\n            });\n        }\n    }\n\n    make_dates() {\n        const pageScroll = window.scrollY;\n        const originOffset =\n            pageScroll + this.$wrapper.getBoundingClientRect().top;\n\n        if (originOffset <= pageScroll) {\n            this.layers.date.style.transform = `translate(0px, ${Math.floor(\n                window.scrollY - originOffset\n            )}px)`;\n        }\n\n        for (let date of this.get_dates_to_draw()) {\n            createSVG('text', {\n                x: date.lower_x,\n                y: date.lower_y,\n                innerHTML: date.lower_text,\n                class: 'lower-text',\n                append_to: this.layers.date,\n            });\n\n            if (date.upper_text) {\n                const $upper_text = createSVG('text', {\n                    x: date.upper_x,\n                    y: date.upper_y,\n                    innerHTML: date.upper_text,\n                    class: 'upper-text',\n                    append_to: this.layers.date,\n                });\n\n                // remove out-of-bound dates\n                if (\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\n                ) {\n                    $upper_text.remove();\n                }\n            }\n        }\n    }\n\n    get_dates_to_draw() {\n        let last_date = null;\n        const dates = this.dates.map((date, i) => {\n            const d = this.get_date_info(date, last_date, i);\n            last_date = date;\n            return d;\n        });\n        return dates;\n    }\n\n    get_date_info(date, last_date, i) {\n        if (!last_date) {\n            last_date = date_utils.add(date, 1, 'year');\n        }\n        const date_text = {\n            'Quarter Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            'Half Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            Day_lower:\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Week_lower:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : date_utils.format(date, 'D', this.options.language),\n            Month_lower: date_utils.format(date, 'MMMM', this.options.language),\n            Year_lower: date_utils.format(date, 'YYYY', this.options.language),\n            'Quarter Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : '',\n            'Half Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date.getMonth() !== last_date.getMonth()\n                        ? date_utils.format(\n                              date,\n                              'D MMM',\n                              this.options.language\n                          )\n                        : date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Day_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Week_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Month_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n            Year_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n        };\n\n        const base_pos = {\n            x: i * this.options.column_width,\n            lower_y: this.options.header_height,\n            upper_y: this.options.header_height - 25,\n        };\n\n        const x_pos = {\n            'Quarter Day_lower': (this.options.column_width * 4) / 2,\n            'Quarter Day_upper': 0,\n            'Half Day_lower': (this.options.column_width * 2) / 2,\n            'Half Day_upper': 0,\n            Day_lower: this.options.column_width / 2,\n            Day_upper: (this.options.column_width * 30) / 2,\n            Week_lower: 0,\n            Week_upper: (this.options.column_width * 4) / 2,\n            Month_lower: this.options.column_width / 2,\n            Month_upper: (this.options.column_width * 12) / 2,\n            Year_lower: this.options.column_width / 2,\n            Year_upper: (this.options.column_width * 30) / 2,\n        };\n\n        return {\n            upper_text: date_text[`${this.options.view_mode}_upper`],\n            lower_text: date_text[`${this.options.view_mode}_lower`],\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n            upper_y: base_pos.upper_y,\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n            lower_y: base_pos.lower_y,\n        };\n    }\n\n    make_bars() {\n        this.bars = this.tasks.map((task) => {\n            const bar = new Bar(this, task);\n            this.layers.bar.appendChild(bar.group);\n            return bar;\n        });\n    }\n\n    make_arrows() {\n        this.arrows = [];\n        for (let task of this.tasks) {\n            let arrows = [];\n            arrows = task.dependencies\n                .map((task_id) => {\n                    const dependency = this.get_task(task_id);\n                    if (!dependency) return;\n                    const arrow = new Arrow(\n                        this,\n                        this.bars[dependency._index], // from_task\n                        this.bars[task._index] // to_task\n                    );\n                    this.layers.arrow.appendChild(arrow.element);\n                    return arrow;\n                })\n                .filter(Boolean); // filter falsy values\n            this.arrows = this.arrows.concat(arrows);\n        }\n    }\n\n    map_arrows_on_bars() {\n        for (let bar of this.bars) {\n            bar.arrows = this.arrows.filter((arrow) => {\n                return (\n                    arrow.from_task.task.id === bar.task.id ||\n                    arrow.to_task.task.id === bar.task.id\n                );\n            });\n        }\n    }\n\n    set_width() {\n        const cur_width = this.$svg.getBoundingClientRect().width;\n        const actual_width = this.$svg\n            .querySelector('.grid .grid-row')\n            .getAttribute('width');\n        if (cur_width < actual_width) {\n            this.$svg.setAttribute('width', actual_width);\n        }\n    }\n\n    set_scroll_position() {\n        const parent_element = this.$svg.parentElement;\n        if (!parent_element) return;\n\n        const hours_before_first_task = date_utils.diff(\n            this.get_oldest_starting_date(),\n            this.gantt_start,\n            'hour'\n        );\n\n        const scroll_pos =\n            (hours_before_first_task / this.options.step) *\n                this.options.column_width -\n            this.options.column_width;\n\n        parent_element.scrollLeft = scroll_pos;\n    }\n\n    bind_scroll_event() {\n        const originOffset =\n            window.scrollY + this.$wrapper.getBoundingClientRect().top;\n        const $table_header = $('.table-header');\n        let ticking = false;\n\n        $.bind(\n            window,\n            'scroll',\n            () => {\n                const pageScroll = window.scrollY;\n\n                if (ticking) return;\n\n                ticking = true;\n                window.requestAnimationFrame(() => {\n                    if (originOffset <= pageScroll) {\n                        $table_header.style.top = `${Math.floor(\n                            pageScroll - originOffset\n                        )}px`;\n                        this.layers.header.style.transform = `translate(0px, ${Math.floor(\n                            pageScroll - originOffset\n                        )}px)`;\n                        this.layers.date.style.transform = `translate(0px, ${Math.floor(\n                            pageScroll - originOffset\n                        )}px)`;\n                    } else {\n                        $table_header.style.top = '0px';\n                        this.layers.header.style.transform =\n                            'translate(0px, 0px)';\n                        this.layers.date.style.transform =\n                            'translate(0px, 0px)';\n                    }\n\n                    ticking = false;\n                });\n            },\n            { passive: true }\n        );\n    }\n\n    bind_grid_click() {\n        $.on(\n            this.$svg,\n            this.options.popup_trigger,\n            '.grid-row, .grid-header',\n            () => {\n                this.unselect_all();\n                this.hide_popup();\n            }\n        );\n    }\n\n    bind_bar_events() {\n        let is_dragging = false;\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing_left = false;\n        let is_resizing_right = false;\n        let parent_bar_id = null;\n        let bars = []; // instanceof Bar\n        this.bar_being_dragged = null;\n\n        function action_in_progress() {\n            return is_dragging || is_resizing_left || is_resizing_right;\n        }\n\n        $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\n            const bar_wrapper = $.closest('.bar-wrapper', element);\n\n            if (element.classList.contains('left')) {\n                is_resizing_left = true;\n            } else if (element.classList.contains('right')) {\n                is_resizing_right = true;\n            } else if (element.classList.contains('bar-wrapper')) {\n                is_dragging = true;\n            }\n\n            bar_wrapper.classList.add('active');\n\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\n            const ids = [\n                parent_bar_id,\n                ...this.get_all_dependent_tasks(parent_bar_id),\n            ];\n            bars = ids.map((id) => this.get_bar(id));\n\n            this.bar_being_dragged = parent_bar_id;\n\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                $bar.ox = $bar.getX();\n                $bar.oy = $bar.getY();\n                $bar.owidth = $bar.getWidth();\n                $bar.finaldx = 0;\n            });\n        });\n\n        $.on(this.$svg, 'mousemove', (e) => {\n            if (!action_in_progress()) return;\n            const dx = e.offsetX - x_on_start;\n            const dy = e.offsetY - y_on_start;\n\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                $bar.finaldx = this.get_snap_position(dx);\n                this.hide_popup();\n                if (is_resizing_left) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx,\n                            width: $bar.owidth - $bar.finaldx,\n                        });\n                    } else {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx,\n                        });\n                    }\n                } else if (is_resizing_right) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            width: $bar.owidth + $bar.finaldx,\n                        });\n                    }\n                } else if (is_dragging) {\n                    bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n                }\n            });\n        });\n\n        document.addEventListener('mouseup', (e) => {\n            if (is_dragging || is_resizing_left || is_resizing_right) {\n                bars.forEach((bar) => bar.group.classList.remove('active'));\n            }\n\n            is_dragging = false;\n            is_resizing_left = false;\n            is_resizing_right = false;\n        });\n\n        $.on(this.$svg, 'mouseup', (e) => {\n            this.bar_being_dragged = null;\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                if (!$bar.finaldx) return;\n                bar.date_changed();\n                bar.set_action_completed();\n            });\n        });\n\n        this.bind_bar_progress();\n    }\n\n    bind_bar_progress() {\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing = null;\n        let bar = null;\n        let $bar_progress = null;\n        let $bar = null;\n\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\n            is_resizing = true;\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\n            const id = $bar_wrapper.getAttribute('data-id');\n            bar = this.get_bar(id);\n\n            $bar_progress = bar.$bar_progress;\n            $bar = bar.$bar;\n\n            $bar_progress.finaldx = 0;\n            $bar_progress.owidth = $bar_progress.getWidth();\n            $bar_progress.min_dx = -$bar_progress.getWidth();\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n        });\n\n        $.on(this.$svg, 'mousemove', (e) => {\n            if (!is_resizing) return;\n            let dx = e.offsetX - x_on_start;\n            let dy = e.offsetY - y_on_start;\n\n            if (dx > $bar_progress.max_dx) {\n                dx = $bar_progress.max_dx;\n            }\n            if (dx < $bar_progress.min_dx) {\n                dx = $bar_progress.min_dx;\n            }\n\n            const $handle = bar.$handle_progress;\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\n            $bar_progress.finaldx = dx;\n        });\n\n        $.on(this.$svg, 'mouseup', () => {\n            is_resizing = false;\n            if (!($bar_progress && $bar_progress.finaldx)) return;\n            bar.progress_changed();\n            bar.set_action_completed();\n        });\n    }\n\n    get_all_dependent_tasks(task_id) {\n        let out = [];\n        let to_process = [task_id];\n        while (to_process.length) {\n            const deps = to_process.reduce((acc, curr) => {\n                acc = acc.concat(this.dependency_map[curr]);\n                return acc;\n            }, []);\n\n            out = out.concat(deps);\n            to_process = deps.filter((d) => !to_process.includes(d));\n        }\n\n        return out.filter(Boolean);\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.view_is(VIEW_MODE.WEEK)) {\n            rem = dx % (this.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 14\n                    ? 0\n                    : this.options.column_width / 7);\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            rem = dx % (this.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 60\n                    ? 0\n                    : this.options.column_width / 30);\n        } else {\n            rem = dx % this.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 2\n                    ? 0\n                    : this.options.column_width);\n        }\n        return position;\n    }\n\n    unselect_all() {\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\n            el.classList.remove('active');\n        });\n    }\n\n    view_is(modes) {\n        if (typeof modes === 'string') {\n            return this.options.view_mode === modes;\n        }\n\n        if (Array.isArray(modes)) {\n            return modes.some((mode) => this.options.view_mode === mode);\n        }\n\n        return false;\n    }\n\n    get_task(id) {\n        return this.tasks.find((task) => {\n            return task.id === id;\n        });\n    }\n\n    get_bar(id) {\n        return this.bars.find((bar) => {\n            return bar.task.id === id;\n        });\n    }\n\n    show_popup(options) {\n        if (!this.popup) {\n            this.popup = new Popup(\n                this.popup_wrapper,\n                this.options.custom_popup_html\n            );\n        }\n        this.popup.show(options);\n    }\n\n    hide_popup() {\n        this.popup && this.popup.hide();\n    }\n\n    trigger_event(event, args) {\n        if (this.options['on_' + event]) {\n            this.options['on_' + event].apply(null, args);\n        }\n    }\n\n    /**\n     * Gets the oldest starting date from the list of tasks\n     *\n     * @returns Date\n     * @memberof Gantt\n     */\n    get_oldest_starting_date() {\n        return this.tasks\n            .map((task) => task._start)\n            .reduce((prev_date, cur_date) =>\n                cur_date <= prev_date ? cur_date : prev_date\n            );\n    }\n\n    /**\n     * Clear all elements from the parent svg element\n     *\n     * @memberof Gantt\n     */\n    clear() {\n        this.$svg.innerHTML = '';\n    }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","date_utils","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","parseInt","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replace","push","value","diff","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","matches","parentNode","getAttribute","style","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","_end","_start","step","width","column_width","progress_width","progress","group","class","custom_class","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","draw_bar","draw_progress_bar","draw_label","draw_resize_handles","$bar","rx","ry","classList","$bar_progress","requestAnimationFrame","update_label_position","bar","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","popup_trigger","show_popup","unselect_all","trigger_event","bar_being_dragged","subtitle","language","target_element","title","handle_selected","update_bar_position","dependencies","dep","get_bar","reduce","prev","curr","update_attr","update_handle_position","update_progressbar_position","update_arrow_position","date_changed","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","gantt_start","width_in_units","task_start","view_is","header_height","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","label","getBBox","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","left","Popup","parent","custom_html","make","hide","pointer","show","Error","html","clientWidth","position_meta","HTMLElement","getBoundingClientRect","top","transform","opacity","Table","dragStartY","columns","draw_draggable_col","el","$el","createElement","className","draw_table_header","$thead","$tr","column","$th","textContent","get_parentNode","tagName","draw_table_body","tasks","setGroupPosition","$tbody","make_table_row","row","append","contains","bind_draggable_event","isRowLine","find","t","groupPosition","index","deps","level","$td","data","render","type","closed","$ins","parentId","child_node","text","createTextNode","get_drag_after_element","container","querySelectorAll","child","box","NEGATIVE_INFINITY","find_task_item","preventDefault","clientY","draggableEl","afterElement","insertBefore","async","targetItem","dragItem","afterItem","params","c_id","ref","c_position","p_position","p_parentId","arr","filter","draggble_rerender","Split","wrapper","draw_split_bar","$split_bar","mouseMoveHandler","$table","previousElementSibling","$gantt","nextSibling","clientX","max","min","offsetLeft","mouseUpHandler","prepend","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","Gantt","contents","originTasks","setup_options","setup_tasks","setup_wrapper","change_view_mode","setup_split_bar","setup_table","bind_events","svg_element","wrapper_element","$svg","$wrapper","$container","parent_element","parentElement","setup_mode_handler","popup_wrapper","excel_export","btn_group","innerText","float","btn","view_mode","childNodes","default_options","view_modes","date_format","custom_popup_html","assign","sort_tasks","start","end","every","trim","random","toString","generate_id","setup_dependencies","dependency_map","refresh","rerender_table","mode","update_view_scale","setup_dates","setup_gantt_dates","setup_date_values","gantt_end","dates","cur_date","bind_grid_click","bind_bar_events","bind_scroll_event","clear","setup_layers","make_grid","make_grid_header","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","$table_body","table","bind_table_event","item","update_origin_tasks","sorted_tasks","children_idx_info","taskIdx","hasOwnProperty","parentIdx","findIndex","splice","acc","cur","update_dependecies","wbs","layers","layer","make_table","dataset","get_task","$target","$table_container","$table_header","make_grid_background","make_grid_rows","make_grid_ticks","make_grid_highlights","$grid_row","Array","toggle","grid_width","grid_height","grid","rows_layer","row_width","row_height","row_y","header_width","pageScroll","window","scrollY","originOffset","header","tick_x","tick_y","tick_height","tick_class","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","x2","last_date","get_date_info","date_text","Day_lower","Week_lower","Month_lower","Year_lower","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","task_id","dependency","Boolean","cur_width","actual_width","scroll_pos","get_oldest_starting_date","scrollLeft","ticking","passive","hide_popup","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","offsetX","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","modes","isArray","some","popup","args","apply","prev_date"],"mappings":"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"}