{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/table.js","../src/split.js","../src/index.js"],"sourcesContent":["const YEAR = 'year';\r\nconst MONTH = 'month';\r\nconst DAY = 'day';\r\nconst HOUR = 'hour';\r\nconst MINUTE = 'minute';\r\nconst SECOND = 'second';\r\nconst MILLISECOND = 'millisecond';\r\n\r\nexport default {\r\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\r\n        if (date instanceof Date) {\r\n            return date;\r\n        }\r\n        if (typeof date === 'string') {\r\n            let date_parts, time_parts;\r\n            const parts = date.split(' ');\r\n\r\n            date_parts = parts[0]\r\n                .split(date_separator)\r\n                .map((val) => parseInt(val, 10));\r\n            time_parts = parts[1] && parts[1].split(time_separator);\r\n\r\n            // month is 0 indexed\r\n            date_parts[1] = date_parts[1] - 1;\r\n\r\n            let vals = date_parts;\r\n\r\n            if (time_parts && time_parts.length) {\r\n                if (time_parts.length == 4) {\r\n                    time_parts[3] = '0.' + time_parts[3];\r\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\r\n                }\r\n                vals = vals.concat(time_parts);\r\n            }\r\n\r\n            return new Date(...vals);\r\n        }\r\n    },\r\n\r\n    to_string(date, with_time = false) {\r\n        if (!(date instanceof Date)) {\r\n            throw new TypeError('Invalid argument type');\r\n        }\r\n        const vals = this.get_date_values(date).map((val, i) => {\r\n            if (i === 1) {\r\n                // add 1 for month\r\n                val = val + 1;\r\n            }\r\n\r\n            if (i === 6) {\r\n                return padStart(val + '', 3, '0');\r\n            }\r\n\r\n            return padStart(val + '', 2, '0');\r\n        });\r\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\r\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\r\n\r\n        return date_string + (with_time ? ' ' + time_string : '');\r\n    },\r\n\r\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'ko') {\r\n        const dateTimeFormat = new Intl.DateTimeFormat(lang, {\r\n            month: 'long'\r\n        });\r\n        const month_name = dateTimeFormat.format(date);\r\n        const month_name_capitalized =\r\n            month_name.charAt(0).toUpperCase() + month_name.slice(1);\r\n\r\n        const values = this.get_date_values(date).map(d => padStart(d, 2, 0));\r\n        const format_map = {\r\n            YYYY: values[0],\r\n            MM: padStart(+values[1] + 1, 2, 0),\r\n            DD: values[2],\r\n            HH: values[3],\r\n            mm: values[4],\r\n            ss: values[5],\r\n            SSS: values[6],\r\n            D: values[2],\r\n            MMMM: month_name_capitalized,\r\n            MMM: month_name_capitalized,\r\n        };\r\n\r\n        let str = format_string;\r\n        const formatted_values = [];\r\n\r\n        Object.keys(format_map)\r\n            .sort((a, b) => b.length - a.length) // big string first\r\n            .forEach((key) => {\r\n                if (str.includes(key)) {\r\n                    str = str.replace(key, `$${formatted_values.length}`);\r\n                    formatted_values.push(format_map[key]);\r\n                }\r\n            });\r\n\r\n        formatted_values.forEach((value, i) => {\r\n            str = str.replace(`$${i}`, value);\r\n        });\r\n\r\n        return str;\r\n    },\r\n\r\n    diff(date_a, date_b, scale = DAY) {\r\n        let milliseconds, seconds, hours, minutes, days, months, years;\r\n\r\n        milliseconds = date_a - date_b;\r\n        seconds = milliseconds / 1000;\r\n        minutes = seconds / 60;\r\n        hours = minutes / 60;\r\n        days = hours / 24;\r\n        months = days / 30;\r\n        years = months / 12;\r\n\r\n        if (!scale.endsWith('s')) {\r\n            scale += 's';\r\n        }\r\n\r\n        return Math.floor(\r\n            {\r\n                milliseconds,\r\n                seconds,\r\n                minutes,\r\n                hours,\r\n                days,\r\n                months,\r\n                years,\r\n            }[scale]\r\n        );\r\n    },\r\n\r\n    today() {\r\n        const vals = this.get_date_values(new Date()).slice(0, 3);\r\n        return new Date(...vals);\r\n    },\r\n\r\n    now() {\r\n        return new Date();\r\n    },\r\n\r\n    add(date, qty, scale) {\r\n        qty = parseInt(qty, 10);\r\n        const vals = [\r\n            date.getFullYear() + (scale === YEAR ? qty : 0),\r\n            date.getMonth() + (scale === MONTH ? qty : 0),\r\n            date.getDate() + (scale === DAY ? qty : 0),\r\n            date.getHours() + (scale === HOUR ? qty : 0),\r\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\r\n            date.getSeconds() + (scale === SECOND ? qty : 0),\r\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\r\n        ];\r\n        return new Date(...vals);\r\n    },\r\n\r\n    start_of(date, scale) {\r\n        const scores = {\r\n            [YEAR]: 6,\r\n            [MONTH]: 5,\r\n            [DAY]: 4,\r\n            [HOUR]: 3,\r\n            [MINUTE]: 2,\r\n            [SECOND]: 1,\r\n            [MILLISECOND]: 0,\r\n        };\r\n\r\n        function should_reset(_scale) {\r\n            const max_score = scores[scale];\r\n            return scores[_scale] <= max_score;\r\n        }\r\n\r\n        const vals = [\r\n            date.getFullYear(),\r\n            should_reset(YEAR) ? 0 : date.getMonth(),\r\n            should_reset(MONTH) ? 1 : date.getDate(),\r\n            should_reset(DAY) ? 0 : date.getHours(),\r\n            should_reset(HOUR) ? 0 : date.getMinutes(),\r\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\r\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\r\n        ];\r\n\r\n        return new Date(...vals);\r\n    },\r\n\r\n    clone(date) {\r\n        return new Date(...this.get_date_values(date));\r\n    },\r\n\r\n    get_date_values(date) {\r\n        return [\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            date.getHours(),\r\n            date.getMinutes(),\r\n            date.getSeconds(),\r\n            date.getMilliseconds(),\r\n        ];\r\n    },\r\n\r\n    get_days_in_month(date) {\r\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n        const month = date.getMonth();\r\n\r\n        if (month !== 1) {\r\n            return no_of_days[month];\r\n        }\r\n\r\n        // Feb\r\n        const year = date.getFullYear();\r\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\r\n            return 29;\r\n        }\r\n        return 28;\r\n    },\r\n};\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\r\nfunction padStart(str, targetLength, padString) {\r\n    str = str + '';\r\n    targetLength = targetLength >> 0;\r\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\r\n    if (str.length > targetLength) {\r\n        return String(str);\r\n    } else {\r\n        targetLength = targetLength - str.length;\r\n        if (targetLength > padString.length) {\r\n            padString += padString.repeat(targetLength / padString.length);\r\n        }\r\n        return padString.slice(0, targetLength) + String(str);\r\n    }\r\n}\r\n","export function $(expr, con) {\r\n    return typeof expr === 'string'\r\n        ? (con || document).querySelector(expr)\r\n        : expr || null;\r\n}\r\n\r\nexport function createSVG(tag, attrs) {\r\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n    for (let attr in attrs) {\r\n        if (attr === 'append_to') {\r\n            const parent = attrs.append_to;\r\n            parent.appendChild(elem);\r\n        } else if (attr === 'innerHTML') {\r\n            elem.innerHTML = attrs.innerHTML;\r\n        } else {\r\n            elem.setAttribute(attr, attrs[attr]);\r\n        }\r\n    }\r\n    return elem;\r\n}\r\n\r\nexport function animateSVG(svgElement, attr, from, to) {\r\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\r\n\r\n    if (animatedSvgElement === svgElement) {\r\n        // triggered 2nd time programmatically\r\n        // trigger artificial click event\r\n        const event = document.createEvent('HTMLEvents');\r\n        event.initEvent('click', true, true);\r\n        event.eventName = 'click';\r\n        animatedSvgElement.dispatchEvent(event);\r\n    }\r\n}\r\n\r\nfunction getAnimationElement(\r\n    svgElement,\r\n    attr,\r\n    from,\r\n    to,\r\n    dur = '0.4s',\r\n    begin = '0.1s'\r\n) {\r\n    const animEl = svgElement.querySelector('animate');\r\n    if (animEl) {\r\n        $.attr(animEl, {\r\n            attributeName: attr,\r\n            from,\r\n            to,\r\n            dur,\r\n            begin: 'click + ' + begin, // artificial click\r\n        });\r\n        return svgElement;\r\n    }\r\n\r\n    const animateElement = createSVG('animate', {\r\n        attributeName: attr,\r\n        from,\r\n        to,\r\n        dur,\r\n        begin,\r\n        calcMode: 'spline',\r\n        values: from + ';' + to,\r\n        keyTimes: '0; 1',\r\n        keySplines: cubic_bezier('ease-out'),\r\n    });\r\n    svgElement.appendChild(animateElement);\r\n\r\n    return svgElement;\r\n}\r\n\r\nfunction cubic_bezier(name) {\r\n    return {\r\n        ease: '.25 .1 .25 1',\r\n        linear: '0 0 1 1',\r\n        'ease-in': '.42 0 1 1',\r\n        'ease-out': '0 0 .58 1',\r\n        'ease-in-out': '.42 0 .58 1',\r\n    }[name];\r\n}\r\n\r\n$.on = (element, event, selector, callback) => {\r\n    if (!callback) {\r\n        callback = selector;\r\n        $.bind(element, event, callback);\r\n    } else {\r\n        $.delegate(element, event, selector, callback);\r\n    }\r\n};\r\n\r\n$.off = (element, event, handler) => {\r\n    element.removeEventListener(event, handler);\r\n};\r\n\r\n$.bind = (element, event, callback) => {\r\n    event.split(/\\s+/).forEach(function (event) {\r\n        element.addEventListener(event, callback);\r\n    });\r\n};\r\n\r\n$.delegate = (element, event, selector, callback) => {\r\n    element.addEventListener(event, function (e) {\r\n        const delegatedTarget = e.target.closest(selector);\r\n        if (delegatedTarget) {\r\n            e.delegatedTarget = delegatedTarget;\r\n            callback.call(this, e, delegatedTarget);\r\n        }\r\n    });\r\n};\r\n\r\n$.closest = (selector, element) => {\r\n    if (!element) return null;\r\n\r\n    if (element.matches(selector)) {\r\n        return element;\r\n    }\r\n\r\n    return $.closest(selector, element.parentNode);\r\n};\r\n\r\n$.attr = (element, attr, value) => {\r\n    if (!value && typeof attr === 'string') {\r\n        return element.getAttribute(attr);\r\n    }\r\n\r\n    if (typeof attr === 'object') {\r\n        for (let key in attr) {\r\n            $.attr(element, key, attr[key]);\r\n        }\r\n        return;\r\n    }\r\n\r\n    element.setAttribute(attr, value);\r\n};\r\n\r\n$.style = (element, attr, value) => {\r\n    if (!value && typeof attr === 'string') {\r\n        return element.getAttribute(attr);\r\n    }\r\n\r\n    if (typeof attr === 'object') {\r\n        for (let key in attr) {\r\n            $.style(element, key, attr[key]);\r\n        }\r\n        return;\r\n    }\r\n\r\n    element.style[attr] = value;\r\n};\r\n","import date_utils from './date_utils';\r\nimport { $, createSVG, animateSVG } from './svg_utils';\r\n\r\nexport default class Bar {\r\n    constructor(gantt, task) {\r\n        this.set_defaults(gantt, task);\r\n        this.prepare();\r\n        this.draw();\r\n        this.bind();\r\n    }\r\n\r\n    set_defaults(gantt, task) {\r\n        this.action_completed = false;\r\n        this.gantt = gantt;\r\n        this.task = task;\r\n    }\r\n\r\n    prepare() {\r\n        this.prepare_values();\r\n        this.prepare_helpers();\r\n    }\r\n\r\n    prepare_values() {\r\n        this.invalid = this.task.invalid;\r\n        this.height = this.gantt.options.bar_height;\r\n        this.x = this.compute_x();\r\n        this.y = this.compute_y();\r\n        this.corner_radius = this.gantt.options.bar_corner_radius;\r\n        this.duration =\r\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\r\n            this.gantt.options.step;\r\n        this.width = this.gantt.options.column_width * this.duration;\r\n        this.progress_width =\r\n            this.gantt.options.column_width *\r\n                this.duration *\r\n                (this.task.progress / 100) || 0;\r\n        this.group = createSVG('g', {\r\n            class: 'bar-wrapper ' + (this.task.custom_class || ''),\r\n            'data-id': this.task.id,\r\n        });\r\n        this.bar_group = createSVG('g', {\r\n            class: 'bar-group',\r\n            append_to: this.group,\r\n        });\r\n        this.handle_group = createSVG('g', {\r\n            class: 'handle-group',\r\n            append_to: this.group,\r\n        });\r\n    }\r\n\r\n    prepare_helpers() {\r\n        SVGElement.prototype.getX = function () {\r\n            return +this.getAttribute('x');\r\n        };\r\n        SVGElement.prototype.getY = function () {\r\n            return +this.getAttribute('y');\r\n        };\r\n        SVGElement.prototype.getWidth = function () {\r\n            return +this.getAttribute('width');\r\n        };\r\n        SVGElement.prototype.getHeight = function () {\r\n            return +this.getAttribute('height');\r\n        };\r\n        SVGElement.prototype.getEndX = function () {\r\n            return this.getX() + this.getWidth();\r\n        };\r\n    }\r\n\r\n    draw() {\r\n        this.draw_bar();\r\n        this.draw_progress_bar();\r\n        this.draw_label();\r\n        this.draw_resize_handles();\r\n    }\r\n\r\n    draw_bar() {\r\n        this.$bar = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar',\r\n            append_to: this.bar_group,\r\n        });\r\n\r\n        animateSVG(this.$bar, 'width', 0, this.width);\r\n\r\n        if (this.invalid) {\r\n            this.$bar.classList.add('bar-invalid');\r\n        }\r\n    }\r\n\r\n    draw_progress_bar() {\r\n        if (this.invalid) return;\r\n        this.$bar_progress = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.progress_width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar-progress',\r\n            append_to: this.bar_group,\r\n        });\r\n\r\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\r\n    }\r\n\r\n    draw_label() {\r\n        createSVG('text', {\r\n            x: this.x + this.width / 2,\r\n            y: this.y + this.height / 2,\r\n            innerHTML: this.task.name,\r\n            class: 'bar-label',\r\n            append_to: this.bar_group,\r\n        });\r\n        // labels get BBox in the next tick\r\n        requestAnimationFrame(() => this.update_label_position());\r\n    }\r\n\r\n    draw_resize_handles() {\r\n        if (this.invalid) return;\r\n\r\n        const bar = this.$bar;\r\n        const handle_width = 8;\r\n\r\n        createSVG('rect', {\r\n            x: bar.getX() + bar.getWidth() - 9,\r\n            y: bar.getY() + 1,\r\n            width: handle_width,\r\n            height: this.height - 2,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'handle right',\r\n            append_to: this.handle_group,\r\n        });\r\n\r\n        createSVG('rect', {\r\n            x: bar.getX() + 1,\r\n            y: bar.getY() + 1,\r\n            width: handle_width,\r\n            height: this.height - 2,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'handle left',\r\n            append_to: this.handle_group,\r\n        });\r\n\r\n        if (this.task.progress && this.task.progress < 100) {\r\n            this.$handle_progress = createSVG('polygon', {\r\n                points: this.get_progress_polygon_points().join(','),\r\n                class: 'handle progress',\r\n                append_to: this.handle_group,\r\n            });\r\n        }\r\n    }\r\n\r\n    get_progress_polygon_points() {\r\n        const bar_progress = this.$bar_progress;\r\n        return [\r\n            bar_progress.getEndX() - 5,\r\n            bar_progress.getY() + bar_progress.getHeight(),\r\n            bar_progress.getEndX() + 5,\r\n            bar_progress.getY() + bar_progress.getHeight(),\r\n            bar_progress.getEndX(),\r\n            bar_progress.getY() + bar_progress.getHeight() - 8.66,\r\n        ];\r\n    }\r\n\r\n    bind() {\r\n        if (this.invalid) return;\r\n        this.setup_click_event();\r\n    }\r\n\r\n    setup_click_event() {\r\n        $.on(this.group, 'focus ' + this.gantt.options.popup_trigger, (e) => {\r\n            if (this.action_completed) {\r\n                // just finished a move action, wait for a few seconds\r\n                return;\r\n            }\r\n\r\n            this.show_popup();\r\n            this.gantt.unselect_all();\r\n            this.group.classList.add('active');\r\n        });\r\n\r\n        $.on(this.group, 'dblclick', (e) => {\r\n            if (this.action_completed) {\r\n                // just finished a move action, wait for a few seconds\r\n                return;\r\n            }\r\n\r\n            this.gantt.trigger_event('click', [this.task]);\r\n        });\r\n    }\r\n\r\n    show_popup() {\r\n        if (this.gantt.bar_being_dragged) return;\r\n\r\n        const start_date = date_utils.format(\r\n            this.task._start,\r\n            'MMM D',\r\n            this.gantt.options.language\r\n        );\r\n        const end_date = date_utils.format(\r\n            date_utils.add(this.task._end, -1, 'second'),\r\n            'MMM D',\r\n            this.gantt.options.language\r\n        );\r\n        const subtitle = start_date + ' - ' + end_date;\r\n\r\n        this.gantt.show_popup({\r\n            target_element: this.$bar,\r\n            title: this.task.name,\r\n            subtitle: subtitle,\r\n            task: this.task,\r\n        });\r\n        this.gantt.handle_selected(this.task);\r\n    }\r\n\r\n    update_bar_position({ x = null, width = null }) {\r\n        const bar = this.$bar;\r\n        if (x) {\r\n            // get all x values of parent task\r\n            const xs = this.task.dependencies.map((dep) => {\r\n                return this.gantt.get_bar(dep).$bar.getX();\r\n            });\r\n            // child task must not go before parent\r\n            const valid_x = xs.reduce((prev, curr) => {\r\n                return x >= curr;\r\n            }, x);\r\n            if (!valid_x) {\r\n                width = null;\r\n                return;\r\n            }\r\n            this.update_attr(bar, 'x', x);\r\n        }\r\n        if (width && width >= this.gantt.options.column_width) {\r\n            this.update_attr(bar, 'width', width);\r\n        }\r\n        this.update_label_position();\r\n        this.update_handle_position();\r\n        this.update_progressbar_position();\r\n        this.update_arrow_position();\r\n    }\r\n\r\n    date_changed() {\r\n        let changed = false;\r\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\r\n\r\n        if (Number(this.task._start) !== Number(new_start_date)) {\r\n            changed = true;\r\n            this.task._start = new_start_date;\r\n        }\r\n\r\n        if (Number(this.task._end) !== Number(new_end_date)) {\r\n            changed = true;\r\n            this.task._end = new_end_date;\r\n        }\r\n\r\n        if (!changed) return;\r\n\r\n        this.gantt.trigger_event('date_change', [\r\n            this.task,\r\n            new_start_date,\r\n            date_utils.add(new_end_date, -1, 'second'),\r\n        ]);\r\n    }\r\n\r\n    progress_changed() {\r\n        const new_progress = this.compute_progress();\r\n        this.task.progress = new_progress;\r\n        this.gantt.trigger_event('progress_change', [this.task, new_progress]);\r\n    }\r\n\r\n    set_action_completed() {\r\n        this.action_completed = true;\r\n        setTimeout(() => (this.action_completed = false), 1000);\r\n    }\r\n\r\n    compute_start_end_date() {\r\n        const bar = this.$bar;\r\n        const x_in_units = bar.getX() / this.gantt.options.column_width;\r\n        const new_start_date = date_utils.add(\r\n            this.gantt.gantt_start,\r\n            x_in_units * this.gantt.options.step,\r\n            'hour'\r\n        );\r\n        const width_in_units = bar.getWidth() / this.gantt.options.column_width;\r\n        const new_end_date = date_utils.add(\r\n            new_start_date,\r\n            width_in_units * this.gantt.options.step,\r\n            'hour'\r\n        );\r\n\r\n        return { new_start_date, new_end_date };\r\n    }\r\n\r\n    compute_progress() {\r\n        const progress =\r\n            (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\r\n        return parseInt(progress, 10);\r\n    }\r\n\r\n    compute_x() {\r\n        const { step, column_width } = this.gantt.options;\r\n        const task_start = this.task._start;\r\n        const gantt_start = this.gantt.gantt_start;\r\n\r\n        const diff = date_utils.diff(task_start, gantt_start, 'hour');\r\n        let x = (diff / step) * column_width;\r\n\r\n        if (this.gantt.view_is('Month')) {\r\n            const diff = date_utils.diff(task_start, gantt_start, 'day');\r\n            x = (diff * column_width) / 30;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    compute_y() {\r\n        return (\r\n            this.gantt.options.header_height +\r\n            this.gantt.options.padding +\r\n            this.task._index * (this.height + this.gantt.options.padding)\r\n        );\r\n    }\r\n\r\n    get_snap_position(dx) {\r\n        let odx = dx,\r\n            rem,\r\n            position;\r\n\r\n        if (this.gantt.view_is('Week')) {\r\n            rem = dx % (this.gantt.options.column_width / 7);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 14\r\n                    ? 0\r\n                    : this.gantt.options.column_width / 7);\r\n        } else if (this.gantt.view_is('Month')) {\r\n            rem = dx % (this.gantt.options.column_width / 30);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 60\r\n                    ? 0\r\n                    : this.gantt.options.column_width / 30);\r\n        } else {\r\n            rem = dx % this.gantt.options.column_width;\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 2\r\n                    ? 0\r\n                    : this.gantt.options.column_width);\r\n        }\r\n        return position;\r\n    }\r\n\r\n    update_attr(element, attr, value) {\r\n        value = +value;\r\n        if (!isNaN(value)) {\r\n            element.setAttribute(attr, value);\r\n        }\r\n        return element;\r\n    }\r\n\r\n    update_progressbar_position() {\r\n        if (this.invalid) return;\r\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\r\n        this.$bar_progress.setAttribute(\r\n            'width',\r\n            this.$bar.getWidth() * (this.task.progress / 100)\r\n        );\r\n    }\r\n\r\n    update_label_position() {\r\n        const bar = this.$bar,\r\n            label = this.group.querySelector('.bar-label');\r\n\r\n        if (label.getBBox().width > bar.getWidth()) {\r\n            label.classList.add('big');\r\n            label.setAttribute('x', bar.getX() + bar.getWidth() + 5);\r\n        } else {\r\n            label.classList.remove('big');\r\n            label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\r\n        }\r\n    }\r\n\r\n    update_handle_position() {\r\n        if (this.invalid) return;\r\n        const bar = this.$bar;\r\n        this.handle_group\r\n            .querySelector('.handle.left')\r\n            .setAttribute('x', bar.getX() + 1);\r\n        this.handle_group\r\n            .querySelector('.handle.right')\r\n            .setAttribute('x', bar.getEndX() - 9);\r\n        const handle = this.group.querySelector('.handle.progress');\r\n        handle &&\r\n            handle.setAttribute('points', this.get_progress_polygon_points());\r\n    }\r\n\r\n    update_arrow_position() {\r\n        this.arrows = this.arrows || [];\r\n        for (let arrow of this.arrows) {\r\n            arrow.update();\r\n        }\r\n    }\r\n}\r\n\r\nfunction isFunction(functionToCheck) {\r\n    var getType = {};\r\n    return (\r\n        functionToCheck &&\r\n        getType.toString.call(functionToCheck) === '[object Function]'\r\n    );\r\n}\r\n","import { createSVG } from './svg_utils';\r\n\r\nexport default class Arrow {\r\n    constructor(gantt, from_task, to_task) {\r\n        this.gantt = gantt;\r\n        this.from_task = from_task;\r\n        this.to_task = to_task;\r\n\r\n        this.calculate_path();\r\n        this.draw();\r\n    }\r\n\r\n    calculate_path() {\r\n        let start_x =\r\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\r\n\r\n        const condition = () =>\r\n            this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\r\n            start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\r\n\r\n        while (condition()) {\r\n            start_x -= 10;\r\n        }\r\n\r\n        const start_y =\r\n            this.gantt.options.header_height +\r\n            this.gantt.options.bar_height +\r\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\r\n                this.from_task.task._index +\r\n            this.gantt.options.padding;\r\n\r\n        const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\r\n        const end_y =\r\n            this.gantt.options.header_height +\r\n            this.gantt.options.bar_height / 2 +\r\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\r\n                this.to_task.task._index +\r\n            this.gantt.options.padding;\r\n\r\n        const from_is_below_to =\r\n            this.from_task.task._index > this.to_task.task._index;\r\n        const curve = this.gantt.options.arrow_curve;\r\n        const clockwise = from_is_below_to ? 1 : 0;\r\n        const curve_y = from_is_below_to ? -curve : curve;\r\n        const offset = from_is_below_to\r\n            ? end_y + this.gantt.options.arrow_curve\r\n            : end_y - this.gantt.options.arrow_curve;\r\n\r\n        this.path = `\r\n            M ${start_x} ${start_y}\r\n            V ${offset}\r\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n            L ${end_x} ${end_y}\r\n            m -5 -5\r\n            l 5 5\r\n            l -5 5`;\r\n\r\n        if (\r\n            this.to_task.$bar.getX() <\r\n            this.from_task.$bar.getX() + this.gantt.options.padding\r\n        ) {\r\n            const down_1 = this.gantt.options.padding / 2 - curve;\r\n            const down_2 =\r\n                this.to_task.$bar.getY() +\r\n                this.to_task.$bar.getHeight() / 2 -\r\n                curve_y;\r\n            const left = this.to_task.$bar.getX() - this.gantt.options.padding;\r\n\r\n            this.path = `\r\n                M ${start_x} ${start_y}\r\n                v ${down_1}\r\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\r\n                H ${left}\r\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\r\n                V ${down_2}\r\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n                L ${end_x} ${end_y}\r\n                m -5 -5\r\n                l 5 5\r\n                l -5 5`;\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        this.element = createSVG('path', {\r\n            d: this.path,\r\n            'data-from': this.from_task.task.id,\r\n            'data-to': this.to_task.task.id,\r\n        });\r\n    }\r\n\r\n    update() {\r\n        this.calculate_path();\r\n        this.element.setAttribute('d', this.path);\r\n    }\r\n}\r\n","export default class Popup {\r\n    constructor(parent, custom_html) {\r\n        this.parent = parent;\r\n        this.custom_html = custom_html;\r\n        this.make();\r\n    }\r\n\r\n    make() {\r\n        this.parent.innerHTML = `\r\n            <div class=\"title\"></div>\r\n            <div class=\"subtitle\"></div>\r\n            <div class=\"pointer\"></div>\r\n        `;\r\n\r\n        this.hide();\r\n\r\n        this.title = this.parent.querySelector('.title');\r\n        this.subtitle = this.parent.querySelector('.subtitle');\r\n        this.pointer = this.parent.querySelector('.pointer');\r\n    }\r\n\r\n    show(options) {\r\n        if (!options.target_element) {\r\n            throw new Error('target_element is required to show popup');\r\n        }\r\n        if (!options.position) {\r\n            options.position = 'left';\r\n        }\r\n        const target_element = options.target_element;\r\n\r\n        if (this.custom_html) {\r\n            let html = this.custom_html(options.task);\r\n            html += '<div class=\"pointer\"></div>';\r\n            this.parent.innerHTML = html;\r\n            this.pointer = this.parent.querySelector('.pointer');\r\n        } else {\r\n            // set data\r\n            this.title.innerHTML = options.title;\r\n            this.subtitle.innerHTML = options.subtitle;\r\n            this.parent.style.width = this.parent.clientWidth + 'px';\r\n        }\r\n\r\n        // set position\r\n        let position_meta;\r\n        if (target_element instanceof HTMLElement) {\r\n            position_meta = target_element.getBoundingClientRect();\r\n        } else if (target_element instanceof SVGElement) {\r\n            position_meta = options.target_element.getBBox();\r\n        }\r\n\r\n        if (options.position === 'left') {\r\n            this.parent.style.left =\r\n                position_meta.x + (position_meta.width + 10) + 'px';\r\n            this.parent.style.top = position_meta.y + 'px';\r\n\r\n            this.pointer.style.transform = 'rotateZ(90deg)';\r\n            this.pointer.style.left = '-7px';\r\n            this.pointer.style.top = '2px';\r\n        }\r\n\r\n        // show\r\n        this.parent.style.opacity = 1;\r\n    }\r\n\r\n    hide() {\r\n        this.parent.style.opacity = 0;\r\n        this.parent.style.left = 0;\r\n    }\r\n}\r\n","import { $ } from './svg_utils';\n\nexport default class Table {\n    dragStartY = 0;\n    constructor(gantt, columns) {\n        this.set_defaults(gantt, columns);\n    }\n\n    set_defaults(gantt, columns) {\n        this.gantt = gantt;\n        this.columns = columns;\n    }\n\n    draw_table_header() {\n        const $thead = document.createElement('thead');\n        const $tr = document.createElement('tr');\n\n        this.columns.forEach((column) => {\n            const $th = document.createElement('th');\n            $th.textContent = column.title;\n\n            $tr.appendChild($th);\n        });\n\n        $thead.appendChild($tr);\n        $thead.classList.add('table-header');\n\n        $.style($tr, {\n            height: this.gantt.options.header_height + 9 + 'px',\n        });\n\n        return $thead;\n    }\n\n    setGroupPosition(data) {\n        return data.reduce((acc, cur) => {\n            const group = data.filter((t) => t.parentId === cur.parentId);\n\n            if (group[0].id === cur.id) {\n                cur.groupPosition.push('first');\n            }\n            if (group[group.length - 1].id === cur.id) {\n                cur.groupPosition.push('last');\n            }\n            if (!cur.groupPosition.length) {\n                cur.groupPosition.push('middle');\n            }\n\n            acc.push(cur);\n            return acc;\n        }, []);\n    }\n\n    draw_table_body(tasks) {\n        this.tasks = this.setGroupPosition(tasks);\n\n        const $tbody = document.createElement('tbody');\n        $tbody.classList.add('table-body');\n\n        this.make_table_row().forEach((row) => $tbody.append(row));\n\n        this.bind_draggable_event($tbody);\n\n        return $tbody;\n    }\n\n    isRowLine(id) {\n        if (id <= 2) return false;\n        const target = this.tasks.find((t) => t.id === `${id}`);\n\n        return !target.groupPosition.includes('last');\n    }\n\n    make_table_row() {\n        return this.tasks.map((task, index) => {\n            const $tr = document.createElement('tr');\n            $tr.setAttribute('draggable', 'true');\n            $tr.setAttribute('data-id', task.id);\n            $.style($tr, {\n                height:\n                    this.gantt.options.bar_height +\n                    this.gantt.options.padding +\n                    'px',\n            });\n\n            this.columns.forEach((column) => {\n                const $td = document.createElement('td');\n                const { data, render } = column;\n\n                if (data === 'name' && task.level > 1) {\n                    const deps = task.level - 1;\n\n                    $td.setAttribute('rel', task.type);\n                    $td.className = `work-name indent-${deps} indent-${deps}-${task.groupPosition[0]}`;\n\n                    if (task.groupPosition[1]) {\n                        $td.classList.add(\n                            `indent-${deps}-${task.groupPosition[1]}`\n                        );\n                    }\n\n                    if (task.type !== 'default') {\n                        $td.classList.add(task.closed ? 'closed' : 'opened');\n                    }\n\n                    for (let i = 0; i < deps; i++) {\n                        const $ins = document.createElement('ins');\n                        $ins.textContent = '';\n\n                        this.isRowLine(task.parentId) &&\n                            $ins.classList.add('row-line');\n\n                        if (deps === 1 || i === deps - 2) {\n                            $ins.classList.add('marker');\n\n                            deps > 1 && $ins.classList.add('row-line');\n\n                            $td.append($ins);\n                            break;\n                        }\n\n                        $td.append($ins);\n                    }\n                }\n\n                if (render) {\n                    const child_node = render(task[data], task);\n                    $td.append(child_node);\n                } else {\n                    const text = document.createTextNode(task[data] ?? '');\n                    $td.append(text);\n                }\n\n                $tr.append($td);\n            });\n\n            $tr.addEventListener('dragstart', (e) => {\n                e.target.classList.add('dragging');\n            });\n            $tr.addEventListener('dragend', (e) => {\n                e.target.classList.remove('dragging');\n            });\n\n            return $tr;\n        });\n    }\n\n    get_drag_after_element(container, y) {\n        const draggableElements = [\n            ...container.querySelectorAll('tr:not(.dragging)'),\n        ];\n\n        return draggableElements.reduce(\n            (closest, child) => {\n                const box = child.getBoundingClientRect();\n                const offset = y - box.top - box.height / 2;\n                if (offset < 0 && offset > closest.offset) {\n                    return { offset: offset, element: child };\n                } else {\n                    return closest;\n                }\n            },\n            { offset: Number.NEGATIVE_INFINITY }\n        ).element;\n    }\n\n    find_task_item(id) {\n        return this.tasks.find((t) => t.id === id);\n    }\n\n    bind_draggable_event($tbody) {\n        $tbody.addEventListener('dragover', (e) => {\n            e.preventDefault();\n            if (!this.dragStartY) this.dragStartY = e.clientY;\n\n            this.draggableEl = document.querySelector('.dragging');\n            this.afterElement = this.get_drag_after_element($tbody, e.clientY);\n\n            $tbody.insertBefore(this.draggableEl, this.afterElement);\n        });\n\n        $tbody.addEventListener('drop', async (e) => {\n            e.preventDefault();\n            const targetItem = this.find_task_item(\n                e.target.parentNode.getAttribute('data-id')\n            );\n            const dragItem = this.find_task_item(\n                this.draggableEl.getAttribute('data-id')\n            );\n            const afterItem = this.find_task_item(\n                this.afterElement.getAttribute('data-id')\n            );\n\n            const params = {\n                c_id: dragItem.id,\n                ref: afterItem.parentId,\n                c_position:\n                    e.clientY > this.dragStartY\n                        ? afterItem.position - 1\n                        : afterItem.position,\n                level: afterItem.level,\n                p_position: dragItem.position,\n                p_parentId: dragItem.parentId,\n            };\n\n            if (targetItem.type !== 'default') {\n                const arr = this.tasks.filter(\n                    (t) => t.parentId === Number(targetItem.id)\n                ).length;\n                params.ref = targetItem.id;\n                params.level = targetItem.level + 1;\n                params.c_position = arr ? arr : 0;\n            }\n\n            this.dragStartY = 0;\n            this.gantt.draggble_rerender(params);\n            this.gantt.trigger_event('drag_row', [params]);\n        });\n    }\n}\n","import { $ } from './svg_utils';\r\n\r\nexport default class Split {\r\n    constructor(wrapper) {\r\n        this.draw_split_bar(wrapper);\r\n    }\r\n\r\n    draw_split_bar(elem) {\r\n        const $split_bar = document.createElement('div');\r\n        $split_bar.classList.add('split-bar');\r\n\r\n        let x = 0;\r\n\r\n        const mouseDownHandler = function (e) {\r\n            x = e.clientX;\r\n\r\n            document.addEventListener('mousemove', mouseMoveHandler);\r\n            document.addEventListener('mouseup', mouseUpHandler);\r\n        };\r\n\r\n        const mouseMoveHandler = function (e) {\r\n            const $table = $split_bar.previousElementSibling;\r\n            const $gantt = $split_bar.nextSibling;\r\n\r\n            const dx = e.clientX - x;\r\n            const left =\r\n                (Math.max(\r\n                    0,\r\n                    Math.min($split_bar.offsetLeft + dx, elem.clientWidth)\r\n                ) /\r\n                    elem.clientWidth) *\r\n                100;\r\n\r\n            $.style($split_bar, { left: `${left}%` });\r\n            $.style($table, { 'flex-basis': `${left}%` });\r\n            $.style($gantt, { 'flex-basis': `${100 - left}%` });\r\n            $.style($table, { 'overflow-x': 'hidden' });\r\n            $.style($gantt, { 'overflow-x': 'hidden' });\r\n\r\n            x = e.clientX;\r\n        };\r\n\r\n        const mouseUpHandler = function () {\r\n            const $table = $split_bar.previousElementSibling;\r\n            const $gantt = $split_bar.nextSibling;\r\n\r\n            document.removeEventListener('mousemove', mouseMoveHandler);\r\n            document.removeEventListener('mouseup', mouseUpHandler);\r\n\r\n            $.style($table, { 'overflow-x': 'auto' });\r\n            $.style($gantt, { 'overflow-x': 'auto' });\r\n        };\r\n\r\n        $split_bar.addEventListener('mousedown', mouseDownHandler);\r\n        elem.prepend($split_bar);\r\n    }\r\n}\r\n","import date_utils from './date_utils';\r\nimport { $, createSVG } from './svg_utils';\r\nimport Bar from './bar';\r\nimport Arrow from './arrow';\r\nimport Popup from './popup';\r\nimport Table from './table';\r\nimport Split from './split';\r\n\r\nimport './gantt.scss';\r\n\r\nconst VIEW_MODE = {\r\n    QUARTER_DAY: 'Quarter Day',\r\n    HALF_DAY: 'Half Day',\r\n    DAY: 'Day',\r\n    WEEK: 'Week',\r\n    MONTH: 'Month',\r\n    YEAR: 'Year',\r\n};\r\n\r\nexport default class Gantt {\r\n    constructor(wrapper, tasks, options, contents) {\r\n        this.originTasks = tasks;\r\n\r\n        this.setup_options(options);\r\n        this.setup_tasks(tasks);\r\n\r\n        this.setup_wrapper(wrapper);\r\n\r\n        // initialize with default view mode\r\n        this.change_view_mode();\r\n        this.bind_events();\r\n\r\n        this.setup_split_bar();\r\n        this.setup_table(contents);\r\n    }\r\n\r\n    setup_wrapper(element) {\r\n        let svg_element, wrapper_element;\r\n\r\n        // CSS Selector is passed\r\n        if (typeof element === 'string') {\r\n            element = document.querySelector(element);\r\n        }\r\n\r\n        // get the SVGElement\r\n        if (element instanceof HTMLElement) {\r\n            wrapper_element = element;\r\n            svg_element = element.querySelector('svg');\r\n        } else if (element instanceof SVGElement) {\r\n            svg_element = element;\r\n        } else {\r\n            throw new TypeError(\r\n                'Frappé Gantt only supports usage of a string CSS selector,' +\r\n                    \" HTML DOM element or SVG DOM element for the 'element' parameter\"\r\n            );\r\n        }\r\n\r\n        // svg element\r\n        if (!svg_element) {\r\n            // create it\r\n            this.$svg = createSVG('svg', {\r\n                append_to: wrapper_element,\r\n                class: 'gantt',\r\n            });\r\n        } else {\r\n            this.$svg = svg_element;\r\n            this.$svg.classList.add('gantt');\r\n        }\r\n\r\n        this.$wrapper = document.createElement('div');\r\n        this.$wrapper.classList.add('wrapper');\r\n\r\n        // wrapper element\r\n        this.$container = document.createElement('div');\r\n        this.$container.classList.add('gantt-container');\r\n\r\n        const parent_element = this.$svg.parentElement;\r\n        element.appendChild(this.setup_mode_handler());\r\n        parent_element.appendChild(this.$wrapper);\r\n        this.$wrapper.appendChild(this.$container);\r\n        this.$container.appendChild(this.$svg);\r\n\r\n        // popup wrapper\r\n        this.popup_wrapper = document.createElement('div');\r\n        this.popup_wrapper.classList.add('popup-wrapper');\r\n        this.$container.appendChild(this.popup_wrapper);\r\n    }\r\n\r\n    setup_mode_handler() {\r\n        const wrapper = document.createElement('div');\r\n        const excel_export = document.createElement('button');\r\n        const btn_group = document.createElement('div');\r\n\r\n        wrapper.className = 'mt well well-sm clearfix';\r\n        excel_export.className = 'btn btn-default btn-sm mr-xs';\r\n\r\n        excel_export.innerText = 'Excel';\r\n\r\n        $.style(btn_group, { float: 'right' });\r\n\r\n        Object.keys(VIEW_MODE).forEach((key) => {\r\n            const btn = document.createElement('button');\r\n            btn.className = `btn btn-default btn-sm mr-xs ${\r\n                VIEW_MODE[key] === this.options.view_mode ? 'active' : ''\r\n            }`;\r\n            btn.innerText = VIEW_MODE[key];\r\n            btn.addEventListener('click', (e) => {\r\n                e.target.classList.add('active');\r\n                e.target.parentNode.childNodes.forEach((b) =>\r\n                    b.classList.remove('active')\r\n                );\r\n\r\n                this.change_view_mode(VIEW_MODE[key]);\r\n            });\r\n\r\n            btn_group.appendChild(btn);\r\n        });\r\n\r\n        wrapper.append(excel_export);\r\n        wrapper.append(btn_group);\r\n\r\n        return wrapper;\r\n    }\r\n\r\n    setup_options(options) {\r\n        const default_options = {\r\n            header_height: 50,\r\n            column_width: 30,\r\n            step: 24,\r\n            view_modes: [...Object.values(VIEW_MODE)],\r\n            bar_height: 20,\r\n            bar_corner_radius: 3,\r\n            arrow_curve: 5,\r\n            padding: 18,\r\n            view_mode: 'Day',\r\n            date_format: 'YYYY-MM-DD',\r\n            popup_trigger: 'click',\r\n            custom_popup_html: null,\r\n            language: 'ko',\r\n        };\r\n        this.options = Object.assign({}, default_options, options);\r\n    }\r\n\r\n    setup_tasks(tasks) {\r\n        // prepare tasks\r\n        this.tasks = this.sort_tasks(tasks).map((task, i) => {\r\n            // convert to Date objects\r\n            task._start = date_utils.parse(task.start);\r\n            task._end = date_utils.parse(task.end);\r\n\r\n            // make task invalid if duration too large\r\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\r\n                task.end = null;\r\n            }\r\n\r\n            // cache index\r\n            task._index = i;\r\n\r\n            // invalid dates\r\n            if (!task.start && !task.end) {\r\n                const today = date_utils.today();\r\n                task._start = today;\r\n                task._end = date_utils.add(today, 2, 'day');\r\n            }\r\n\r\n            if (!task.start && task.end) {\r\n                task._start = date_utils.add(task._end, -2, 'day');\r\n            }\r\n\r\n            if (task.start && !task.end) {\r\n                task._end = date_utils.add(task._start, 2, 'day');\r\n            }\r\n\r\n            // if hours is not set, assume the last day is full day\r\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\r\n            const task_end_values = date_utils.get_date_values(task._end);\r\n            if (task_end_values.slice(3).every((d) => d === 0)) {\r\n                task._end = date_utils.add(task._end, 24, 'hour');\r\n            }\r\n\r\n            // invalid flag\r\n            if (!task.start || !task.end) {\r\n                task.invalid = true;\r\n            }\r\n\r\n            // dependencies\r\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\r\n                let deps = [];\r\n                if (task.dependencies) {\r\n                    deps = task.dependencies\r\n                        .split(',')\r\n                        .map((d) => d.trim())\r\n                        .filter((d) => d);\r\n                }\r\n                task.dependencies = deps;\r\n            }\r\n\r\n            // uids\r\n            if (!task.id) {\r\n                task.id = generate_id(task);\r\n            }\r\n\r\n            return task;\r\n        });\r\n\r\n        this.setup_dependencies();\r\n    }\r\n\r\n    setup_dependencies() {\r\n        this.dependency_map = {};\r\n        for (let t of this.tasks) {\r\n            for (let d of t.dependencies) {\r\n                this.dependency_map[d] = this.dependency_map[d] || [];\r\n                this.dependency_map[d].push(t.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    refresh(tasks) {\r\n        this.setup_tasks(tasks);\r\n        this.change_view_mode();\r\n        this.rerender_table();\r\n        this.originTasks = tasks;\r\n    }\r\n\r\n    change_view_mode(mode = this.options.view_mode) {\r\n        this.update_view_scale(mode);\r\n        this.setup_dates();\r\n        this.render();\r\n        // fire viewmode_change event\r\n        this.trigger_event('view_change', [mode]);\r\n    }\r\n\r\n    update_view_scale(view_mode) {\r\n        this.options.view_mode = view_mode;\r\n\r\n        if (view_mode === VIEW_MODE.DAY) {\r\n            this.options.step = 24;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\r\n            this.options.step = 24 / 2;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\r\n            this.options.step = 24 / 4;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.WEEK) {\r\n            this.options.step = 24 * 7;\r\n            this.options.column_width = 140;\r\n        } else if (view_mode === VIEW_MODE.MONTH) {\r\n            this.options.step = 24 * 30;\r\n            this.options.column_width = 120;\r\n        } else if (view_mode === VIEW_MODE.YEAR) {\r\n            this.options.step = 24 * 365;\r\n            this.options.column_width = 120;\r\n        }\r\n    }\r\n\r\n    setup_dates() {\r\n        this.setup_gantt_dates();\r\n        this.setup_date_values();\r\n    }\r\n\r\n    setup_gantt_dates() {\r\n        this.gantt_start = this.gantt_end = null;\r\n\r\n        for (let task of this.tasks) {\r\n            // set global start and end date\r\n            if (!this.gantt_start || task._start < this.gantt_start) {\r\n                this.gantt_start = task._start;\r\n            }\r\n            if (!this.gantt_end || task._end > this.gantt_end) {\r\n                this.gantt_end = task._end;\r\n            }\r\n        }\r\n\r\n        this.gantt_start = date_utils.start_of(this.gantt_start, 'day');\r\n        this.gantt_end = date_utils.start_of(this.gantt_end, 'day');\r\n\r\n        // add date padding on both sides\r\n        if (this.view_is([VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\r\n            this.gantt_start = date_utils.add(this.gantt_start, -7, 'day');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 7, 'day');\r\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n            this.gantt_start = date_utils.start_of(this.gantt_start, 'year');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'year');\r\n        } else if (this.view_is(VIEW_MODE.YEAR)) {\r\n            this.gantt_start = date_utils.add(this.gantt_start, -2, 'year');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 2, 'year');\r\n        } else {\r\n            this.gantt_start = date_utils.add(this.gantt_start, -1, 'month');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'month');\r\n        }\r\n    }\r\n\r\n    setup_date_values() {\r\n        this.dates = [];\r\n        let cur_date = null;\r\n\r\n        while (cur_date === null || cur_date < this.gantt_end) {\r\n            if (!cur_date) {\r\n                cur_date = date_utils.clone(this.gantt_start);\r\n            } else {\r\n                if (this.view_is(VIEW_MODE.YEAR)) {\r\n                    cur_date = date_utils.add(cur_date, 1, 'year');\r\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n                    cur_date = date_utils.add(cur_date, 1, 'month');\r\n                } else {\r\n                    cur_date = date_utils.add(\r\n                        cur_date,\r\n                        this.options.step,\r\n                        'hour'\r\n                    );\r\n                }\r\n            }\r\n            this.dates.push(cur_date);\r\n        }\r\n    }\r\n\r\n    bind_events() {\r\n        this.bind_grid_click();\r\n        this.bind_bar_events();\r\n    }\r\n\r\n    render() {\r\n        this.clear();\r\n        this.setup_layers();\r\n        this.make_grid();\r\n        this.make_dates();\r\n        this.make_bars();\r\n        this.make_arrows();\r\n        this.map_arrows_on_bars();\r\n        this.set_width();\r\n        this.set_scroll_position();\r\n    }\r\n\r\n    rerender_table() {\r\n        document.querySelector('.table-body')?.remove();\r\n\r\n        const $table_body = this.table.draw_table_body(this.tasks, {\r\n            height: this.options.bar_height + this.options.padding + 'px',\r\n        });\r\n\r\n        document\r\n            .querySelector('.table-container table')\r\n            .appendChild($table_body);\r\n\r\n        $table_body.addEventListener('click', (event) =>\r\n            this.bind_table_event(event)\r\n        );\r\n    }\r\n\r\n    draggble_rerender(item) {\r\n        this.update_origin_tasks(item);\r\n        this.render();\r\n        this.rerender_table();\r\n    }\r\n\r\n    sort_tasks(tasks) {\r\n        return tasks\r\n            .sort((a, b) => a.parentId - b.parentId || a.position - b.position)\r\n            .reduce((acc, cur) => {\r\n                if (cur.parentId === 2) acc.push([cur]);\r\n                else this.set_task_array(acc, cur);\r\n                return acc;\r\n            }, [])\r\n            .flat(Infinity);\r\n    }\r\n\r\n    set_task_array(root, cur) {\r\n        const arr = this.get_target_array(root, cur);\r\n\r\n        !!arr && arr.push(cur.type === 'default' ? cur : [cur]);\r\n    }\r\n    get_target_array(root, cur) {\r\n        const rootArr = root.find((arr) =>\r\n            arr.flat(Infinity).some((t) => Number(t.id) === cur.parentId)\r\n        );\r\n\r\n        if (rootArr.some((t) => Number(t.id) === cur.parentId)) {\r\n            return rootArr;\r\n        }\r\n\r\n        return this.get_target_array(\r\n            rootArr.filter((r) => Array.isArray(r)),\r\n            cur\r\n        );\r\n    }\r\n\r\n    update_origin_tasks(item) {\r\n        const tasks = this.tasks.reduce((acc, cur) => {\r\n            if (cur.id === item.c_id) {\r\n                cur = {\r\n                    ...cur,\r\n                    parentId: Number(item.ref),\r\n                    dependencies: [item.ref],\r\n                    position: item.c_position,\r\n                    level: item.level,\r\n                };\r\n            } else {\r\n                if (\r\n                    cur.parentId === Number(item.ref) &&\r\n                    item.c_position === item.p_position\r\n                ) {\r\n                    acc.push(cur);\r\n                    return acc;\r\n                }\r\n\r\n                if (cur.parentId === Number(item.ref)) {\r\n                    cur.position =\r\n                        item.c_position > item.p_position\r\n                            ? cur.position < item.p_position\r\n                                ? cur.position\r\n                                : cur.position <= item.c_position\r\n                                ? cur.position - 1\r\n                                : cur.position\r\n                            : cur.position > item.p_position\r\n                            ? cur.position\r\n                            : cur.position >= item.c_position\r\n                            ? cur.position + 1\r\n                            : cur.position;\r\n                } else {\r\n                    if (cur.parentId === item.p_parentId) {\r\n                        cur.position =\r\n                            cur.position < item.p_position\r\n                                ? cur.position\r\n                                : cur.position - 1;\r\n                    }\r\n                }\r\n            }\r\n\r\n            acc.push(cur);\r\n            return acc;\r\n        }, []);\r\n\r\n        this.setup_tasks(tasks);\r\n        this.originTasks = tasks;\r\n    }\r\n\r\n    setup_layers() {\r\n        this.layers = {};\r\n        const layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details'];\r\n        // make group layers\r\n        for (let layer of layers) {\r\n            this.layers[layer] = createSVG('g', {\r\n                class: layer,\r\n                append_to: this.$svg,\r\n            });\r\n        }\r\n    }\r\n\r\n    setup_split_bar() {\r\n        this.split = new Split(this.$wrapper);\r\n    }\r\n\r\n    setup_table(contents, handler) {\r\n        this.table = new Table(this, contents, handler);\r\n        this.make_table();\r\n    }\r\n\r\n    bind_table_event(event) {\r\n        const $tr = event.target.closest('tr');\r\n        const id = $tr.dataset.id;\r\n        const $target = event.target.closest('td');\r\n\r\n        if (\r\n            $target.getAttribute('rel') === 'folder' ||\r\n            $target.getAttribute('rel') === 'drive'\r\n        ) {\r\n            let tasks = [...this.tasks];\r\n\r\n            if ($target.classList.contains('closed')) {\r\n                this.originTasks.forEach((task) => {\r\n                    if (task.id === id) {\r\n                        delete task.closed;\r\n                        return tasks.splice(task._index, 1, task);\r\n                    }\r\n\r\n                    if (task.dependencies.includes(id))\r\n                        tasks.splice(task._index, 0, task);\r\n                });\r\n            } else {\r\n                tasks = this.tasks.reduce((acc, task) => {\r\n                    if (task.id === id) {\r\n                        return [...acc, { ...task, closed: true }];\r\n                    }\r\n\r\n                    if (!task.dependencies.includes(id)) {\r\n                        return [...acc, task];\r\n                    }\r\n\r\n                    return acc;\r\n                }, []);\r\n            }\r\n\r\n            this.setup_tasks(tasks);\r\n            this.render();\r\n            this.rerender_table();\r\n\r\n            return;\r\n        }\r\n\r\n        const task = this.get_task(id);\r\n\r\n        this.handle_selected(task);\r\n    }\r\n\r\n    make_table() {\r\n        const $table_container = document.createElement('div');\r\n        const $table = document.createElement('table');\r\n\r\n        $table_container.className = 'table-container';\r\n\r\n        const $table_header = this.table.draw_table_header();\r\n        const $table_body = this.table.draw_table_body(this.tasks);\r\n\r\n        $table.append($table_header);\r\n        $table.append($table_body);\r\n\r\n        $table_body.addEventListener('click', (event) =>\r\n            this.bind_table_event(event)\r\n        );\r\n\r\n        $table_container.append($table);\r\n\r\n        this.$wrapper.prepend($table_container);\r\n    }\r\n\r\n    make_grid() {\r\n        this.make_grid_background();\r\n        this.make_grid_rows();\r\n        this.make_grid_header();\r\n        this.make_grid_ticks();\r\n        this.make_grid_highlights();\r\n    }\r\n\r\n    handle_selected(task) {\r\n        const $tr = this.$wrapper.querySelectorAll('tr')[task._index + 1];\r\n        const $grid_row =\r\n            this.$wrapper.querySelectorAll('.grid-row')[task._index];\r\n\r\n        if (!$tr.classList.contains('selected')) {\r\n            Array.prototype.forEach.call(\r\n                this.$wrapper.querySelectorAll('.selected'),\r\n                (elem) => elem.classList.remove('selected')\r\n            );\r\n        }\r\n\r\n        $tr?.classList.toggle('selected');\r\n        $grid_row?.classList.toggle('selected');\r\n    }\r\n\r\n    make_grid_background() {\r\n        const grid_width = this.dates.length * this.options.column_width;\r\n        const grid_height =\r\n            this.options.header_height +\r\n            this.options.padding +\r\n            (this.options.bar_height + this.options.padding) *\r\n                this.tasks.length;\r\n\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: grid_width,\r\n            height: grid_height,\r\n            class: 'grid-background',\r\n            append_to: this.layers.grid,\r\n        });\r\n\r\n        $.attr(this.$svg, {\r\n            height: grid_height,\r\n            width: '100%',\r\n        });\r\n    }\r\n\r\n    make_grid_rows() {\r\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\r\n        // const lines_layer = createSVG('g', { append_to: this.layers.grid });\r\n\r\n        const row_width = this.dates.length * this.options.column_width;\r\n        const row_height = this.options.bar_height + this.options.padding;\r\n\r\n        let row_y = this.options.header_height + this.options.padding / 2;\r\n\r\n        for (let task of this.tasks) {\r\n            createSVG('rect', {\r\n                x: 0,\r\n                y: row_y,\r\n                width: row_width,\r\n                height: row_height,\r\n                class: 'grid-row',\r\n                append_to: rows_layer,\r\n            });\r\n\r\n            // createSVG('line', {\r\n            //     x1: 0,\r\n            //     y1: row_y + row_height,\r\n            //     x2: row_width,\r\n            //     y2: row_y + row_height,\r\n            //     class: 'row-line',\r\n            //     append_to: lines_layer,\r\n            // });\r\n\r\n            row_y += this.options.bar_height + this.options.padding;\r\n        }\r\n    }\r\n\r\n    make_grid_header() {\r\n        const header_width = this.dates.length * this.options.column_width;\r\n        const header_height = this.options.header_height + 10;\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: header_width,\r\n            height: header_height,\r\n            class: 'grid-header',\r\n            append_to: this.layers.grid,\r\n        });\r\n    }\r\n\r\n    make_grid_ticks() {\r\n        let tick_x = 0;\r\n        let tick_y = this.options.header_height + this.options.padding / 2;\r\n        let tick_height =\r\n            (this.options.bar_height + this.options.padding) *\r\n            this.tasks.length;\r\n\r\n        for (let date of this.dates) {\r\n            let tick_class = 'tick';\r\n            // thick tick for monday\r\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\r\n                tick_class += ' thick';\r\n            }\r\n            // thick tick for first week\r\n            if (\r\n                this.view_is(VIEW_MODE.WEEK) &&\r\n                date.getDate() >= 1 &&\r\n                date.getDate() < 8\r\n            ) {\r\n                tick_class += ' thick';\r\n            }\r\n            // thick ticks for quarters\r\n            if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\r\n                tick_class += ' thick';\r\n            }\r\n\r\n            createSVG('path', {\r\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\r\n                class: tick_class,\r\n                append_to: this.layers.grid,\r\n            });\r\n\r\n            if (this.view_is(VIEW_MODE.MONTH)) {\r\n                tick_x +=\r\n                    (date_utils.get_days_in_month(date) *\r\n                        this.options.column_width) /\r\n                    30;\r\n            } else {\r\n                tick_x += this.options.column_width;\r\n            }\r\n        }\r\n    }\r\n\r\n    make_grid_highlights() {\r\n        // highlight today's date\r\n        if (this.view_is(VIEW_MODE.DAY)) {\r\n            const x =\r\n                (date_utils.diff(date_utils.today(), this.gantt_start, 'hour') /\r\n                    this.options.step) *\r\n                this.options.column_width;\r\n            const y = 0;\r\n\r\n            const width = this.options.column_width;\r\n            const height =\r\n                (this.options.bar_height + this.options.padding) *\r\n                    this.tasks.length +\r\n                this.options.header_height +\r\n                this.options.padding / 2;\r\n\r\n            createSVG('rect', {\r\n                x,\r\n                y,\r\n                width,\r\n                height,\r\n                class: 'today-highlight',\r\n                append_to: this.layers.grid,\r\n            });\r\n        }\r\n    }\r\n\r\n    make_dates() {\r\n        for (let date of this.get_dates_to_draw()) {\r\n            createSVG('text', {\r\n                x: date.lower_x,\r\n                y: date.lower_y,\r\n                innerHTML: date.lower_text,\r\n                class: 'lower-text',\r\n                append_to: this.layers.date,\r\n            });\r\n\r\n            if (date.upper_text) {\r\n                const $upper_text = createSVG('text', {\r\n                    x: date.upper_x,\r\n                    y: date.upper_y,\r\n                    innerHTML: date.upper_text,\r\n                    class: 'upper-text',\r\n                    append_to: this.layers.date,\r\n                });\r\n\r\n                // remove out-of-bound dates\r\n                if (\r\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\r\n                ) {\r\n                    $upper_text.remove();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get_dates_to_draw() {\r\n        let last_date = null;\r\n        const dates = this.dates.map((date, i) => {\r\n            const d = this.get_date_info(date, last_date, i);\r\n            last_date = date;\r\n            return d;\r\n        });\r\n        return dates;\r\n    }\r\n\r\n    get_date_info(date, last_date, i) {\r\n        if (!last_date) {\r\n            last_date = date_utils.add(date, 1, 'year');\r\n        }\r\n        const date_text = {\r\n            'Quarter Day_lower': date_utils.format(\r\n                date,\r\n                'HH',\r\n                this.options.language\r\n            ),\r\n            'Half Day_lower': date_utils.format(\r\n                date,\r\n                'HH',\r\n                this.options.language\r\n            ),\r\n            Day_lower:\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date_utils.format(date, 'D', this.options.language)\r\n                    : '',\r\n            Week_lower:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'D MMM', this.options.language)\r\n                    : date_utils.format(date, 'D', this.options.language),\r\n            Month_lower: date_utils.format(date, 'MMMM', this.options.language),\r\n            Year_lower: date_utils.format(date, 'YYYY', this.options.language),\r\n            'Quarter Day_upper':\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date_utils.format(date, 'D MMM', this.options.language)\r\n                    : '',\r\n            'Half Day_upper':\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date.getMonth() !== last_date.getMonth()\r\n                        ? date_utils.format(\r\n                              date,\r\n                              'D MMM',\r\n                              this.options.language\r\n                          )\r\n                        : date_utils.format(date, 'D', this.options.language)\r\n                    : '',\r\n            Day_upper:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'MMMM', this.options.language)\r\n                    : '',\r\n            Week_upper:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'MMMM', this.options.language)\r\n                    : '',\r\n            Month_upper:\r\n                date.getFullYear() !== last_date.getFullYear()\r\n                    ? date_utils.format(date, 'YYYY', this.options.language)\r\n                    : '',\r\n            Year_upper:\r\n                date.getFullYear() !== last_date.getFullYear()\r\n                    ? date_utils.format(date, 'YYYY', this.options.language)\r\n                    : '',\r\n        };\r\n\r\n        const base_pos = {\r\n            x: i * this.options.column_width,\r\n            lower_y: this.options.header_height,\r\n            upper_y: this.options.header_height - 25,\r\n        };\r\n\r\n        const x_pos = {\r\n            'Quarter Day_lower': (this.options.column_width * 4) / 2,\r\n            'Quarter Day_upper': 0,\r\n            'Half Day_lower': (this.options.column_width * 2) / 2,\r\n            'Half Day_upper': 0,\r\n            Day_lower: this.options.column_width / 2,\r\n            Day_upper: (this.options.column_width * 30) / 2,\r\n            Week_lower: 0,\r\n            Week_upper: (this.options.column_width * 4) / 2,\r\n            Month_lower: this.options.column_width / 2,\r\n            Month_upper: (this.options.column_width * 12) / 2,\r\n            Year_lower: this.options.column_width / 2,\r\n            Year_upper: (this.options.column_width * 30) / 2,\r\n        };\r\n\r\n        return {\r\n            upper_text: date_text[`${this.options.view_mode}_upper`],\r\n            lower_text: date_text[`${this.options.view_mode}_lower`],\r\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\r\n            upper_y: base_pos.upper_y,\r\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\r\n            lower_y: base_pos.lower_y,\r\n        };\r\n    }\r\n\r\n    make_bars() {\r\n        this.bars = this.tasks.map((task) => {\r\n            const bar = new Bar(this, task);\r\n            this.layers.bar.appendChild(bar.group);\r\n            return bar;\r\n        });\r\n    }\r\n\r\n    make_arrows() {\r\n        this.arrows = [];\r\n        for (let task of this.tasks) {\r\n            let arrows = [];\r\n            arrows = task.dependencies\r\n                .map((task_id) => {\r\n                    const dependency = this.get_task(task_id);\r\n                    if (!dependency) return;\r\n                    const arrow = new Arrow(\r\n                        this,\r\n                        this.bars[dependency._index], // from_task\r\n                        this.bars[task._index] // to_task\r\n                    );\r\n                    this.layers.arrow.appendChild(arrow.element);\r\n                    return arrow;\r\n                })\r\n                .filter(Boolean); // filter falsy values\r\n            this.arrows = this.arrows.concat(arrows);\r\n        }\r\n    }\r\n\r\n    map_arrows_on_bars() {\r\n        for (let bar of this.bars) {\r\n            bar.arrows = this.arrows.filter((arrow) => {\r\n                return (\r\n                    arrow.from_task.task.id === bar.task.id ||\r\n                    arrow.to_task.task.id === bar.task.id\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    set_width() {\r\n        const cur_width = this.$svg.getBoundingClientRect().width;\r\n        const actual_width = this.$svg\r\n            .querySelector('.grid .grid-row')\r\n            .getAttribute('width');\r\n        if (cur_width < actual_width) {\r\n            this.$svg.setAttribute('width', actual_width);\r\n        }\r\n    }\r\n\r\n    set_scroll_position() {\r\n        const parent_element = this.$svg.parentElement;\r\n        if (!parent_element) return;\r\n\r\n        const hours_before_first_task = date_utils.diff(\r\n            this.get_oldest_starting_date(),\r\n            this.gantt_start,\r\n            'hour'\r\n        );\r\n\r\n        const scroll_pos =\r\n            (hours_before_first_task / this.options.step) *\r\n                this.options.column_width -\r\n            this.options.column_width;\r\n\r\n        parent_element.scrollLeft = scroll_pos;\r\n    }\r\n\r\n    bind_grid_click() {\r\n        $.on(\r\n            this.$svg,\r\n            this.options.popup_trigger,\r\n            '.grid-row, .grid-header',\r\n            () => {\r\n                this.unselect_all();\r\n                this.hide_popup();\r\n            }\r\n        );\r\n    }\r\n\r\n    bind_bar_events() {\r\n        let is_dragging = false;\r\n        let x_on_start = 0;\r\n        let y_on_start = 0;\r\n        let is_resizing_left = false;\r\n        let is_resizing_right = false;\r\n        let parent_bar_id = null;\r\n        let bars = []; // instanceof Bar\r\n        this.bar_being_dragged = null;\r\n\r\n        function action_in_progress() {\r\n            return is_dragging || is_resizing_left || is_resizing_right;\r\n        }\r\n\r\n        $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\r\n            const bar_wrapper = $.closest('.bar-wrapper', element);\r\n\r\n            if (element.classList.contains('left')) {\r\n                is_resizing_left = true;\r\n            } else if (element.classList.contains('right')) {\r\n                is_resizing_right = true;\r\n            } else if (element.classList.contains('bar-wrapper')) {\r\n                is_dragging = true;\r\n            }\r\n\r\n            bar_wrapper.classList.add('active');\r\n\r\n            x_on_start = e.offsetX;\r\n            y_on_start = e.offsetY;\r\n\r\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\r\n            const ids = [\r\n                parent_bar_id,\r\n                ...this.get_all_dependent_tasks(parent_bar_id),\r\n            ];\r\n            bars = ids.map((id) => this.get_bar(id));\r\n\r\n            this.bar_being_dragged = parent_bar_id;\r\n\r\n            bars.forEach((bar) => {\r\n                const $bar = bar.$bar;\r\n                $bar.ox = $bar.getX();\r\n                $bar.oy = $bar.getY();\r\n                $bar.owidth = $bar.getWidth();\r\n                $bar.finaldx = 0;\r\n            });\r\n        });\r\n\r\n        $.on(this.$svg, 'mousemove', (e) => {\r\n            if (!action_in_progress()) return;\r\n            const dx = e.offsetX - x_on_start;\r\n            const dy = e.offsetY - y_on_start;\r\n\r\n            bars.forEach((bar) => {\r\n                const $bar = bar.$bar;\r\n                $bar.finaldx = this.get_snap_position(dx);\r\n                this.hide_popup();\r\n                if (is_resizing_left) {\r\n                    if (parent_bar_id === bar.task.id) {\r\n                        bar.update_bar_position({\r\n                            x: $bar.ox + $bar.finaldx,\r\n                            width: $bar.owidth - $bar.finaldx,\r\n                        });\r\n                    } else {\r\n                        bar.update_bar_position({\r\n                            x: $bar.ox + $bar.finaldx,\r\n                        });\r\n                    }\r\n                } else if (is_resizing_right) {\r\n                    if (parent_bar_id === bar.task.id) {\r\n                        bar.update_bar_position({\r\n                            width: $bar.owidth + $bar.finaldx,\r\n                        });\r\n                    }\r\n                } else if (is_dragging) {\r\n                    bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\r\n                }\r\n            });\r\n        });\r\n\r\n        document.addEventListener('mouseup', (e) => {\r\n            if (is_dragging || is_resizing_left || is_resizing_right) {\r\n                bars.forEach((bar) => bar.group.classList.remove('active'));\r\n            }\r\n\r\n            is_dragging = false;\r\n            is_resizing_left = false;\r\n            is_resizing_right = false;\r\n        });\r\n\r\n        $.on(this.$svg, 'mouseup', (e) => {\r\n            this.bar_being_dragged = null;\r\n            bars.forEach((bar) => {\r\n                const $bar = bar.$bar;\r\n                if (!$bar.finaldx) return;\r\n                bar.date_changed();\r\n                bar.set_action_completed();\r\n            });\r\n        });\r\n\r\n        this.bind_bar_progress();\r\n    }\r\n\r\n    bind_bar_progress() {\r\n        let x_on_start = 0;\r\n        let y_on_start = 0;\r\n        let is_resizing = null;\r\n        let bar = null;\r\n        let $bar_progress = null;\r\n        let $bar = null;\r\n\r\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\r\n            is_resizing = true;\r\n            x_on_start = e.offsetX;\r\n            y_on_start = e.offsetY;\r\n\r\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\r\n            const id = $bar_wrapper.getAttribute('data-id');\r\n            bar = this.get_bar(id);\r\n\r\n            $bar_progress = bar.$bar_progress;\r\n            $bar = bar.$bar;\r\n\r\n            $bar_progress.finaldx = 0;\r\n            $bar_progress.owidth = $bar_progress.getWidth();\r\n            $bar_progress.min_dx = -$bar_progress.getWidth();\r\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\r\n        });\r\n\r\n        $.on(this.$svg, 'mousemove', (e) => {\r\n            if (!is_resizing) return;\r\n            let dx = e.offsetX - x_on_start;\r\n            let dy = e.offsetY - y_on_start;\r\n\r\n            if (dx > $bar_progress.max_dx) {\r\n                dx = $bar_progress.max_dx;\r\n            }\r\n            if (dx < $bar_progress.min_dx) {\r\n                dx = $bar_progress.min_dx;\r\n            }\r\n\r\n            const $handle = bar.$handle_progress;\r\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\r\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\r\n            $bar_progress.finaldx = dx;\r\n        });\r\n\r\n        $.on(this.$svg, 'mouseup', () => {\r\n            is_resizing = false;\r\n            if (!($bar_progress && $bar_progress.finaldx)) return;\r\n            bar.progress_changed();\r\n            bar.set_action_completed();\r\n        });\r\n    }\r\n\r\n    get_all_dependent_tasks(task_id) {\r\n        let out = [];\r\n        let to_process = [task_id];\r\n        while (to_process.length) {\r\n            const deps = to_process.reduce((acc, curr) => {\r\n                acc = acc.concat(this.dependency_map[curr]);\r\n                return acc;\r\n            }, []);\r\n\r\n            out = out.concat(deps);\r\n            to_process = deps.filter((d) => !to_process.includes(d));\r\n        }\r\n\r\n        return out.filter(Boolean);\r\n    }\r\n\r\n    get_snap_position(dx) {\r\n        let odx = dx,\r\n            rem,\r\n            position;\r\n\r\n        if (this.view_is(VIEW_MODE.WEEK)) {\r\n            rem = dx % (this.options.column_width / 7);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 14\r\n                    ? 0\r\n                    : this.options.column_width / 7);\r\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n            rem = dx % (this.options.column_width / 30);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 60\r\n                    ? 0\r\n                    : this.options.column_width / 30);\r\n        } else {\r\n            rem = dx % this.options.column_width;\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 2\r\n                    ? 0\r\n                    : this.options.column_width);\r\n        }\r\n        return position;\r\n    }\r\n\r\n    unselect_all() {\r\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\r\n            el.classList.remove('active');\r\n        });\r\n    }\r\n\r\n    view_is(modes) {\r\n        if (typeof modes === 'string') {\r\n            return this.options.view_mode === modes;\r\n        }\r\n\r\n        if (Array.isArray(modes)) {\r\n            return modes.some((mode) => this.options.view_mode === mode);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    get_task(id) {\r\n        return this.tasks.find((task) => {\r\n            return task.id === id;\r\n        });\r\n    }\r\n\r\n    get_bar(id) {\r\n        return this.bars.find((bar) => {\r\n            return bar.task.id === id;\r\n        });\r\n    }\r\n\r\n    show_popup(options) {\r\n        if (!this.popup) {\r\n            this.popup = new Popup(\r\n                this.popup_wrapper,\r\n                this.options.custom_popup_html\r\n            );\r\n        }\r\n        this.popup.show(options);\r\n    }\r\n\r\n    hide_popup() {\r\n        this.popup && this.popup.hide();\r\n    }\r\n\r\n    trigger_event(event, args) {\r\n        if (this.options['on_' + event]) {\r\n            this.options['on_' + event].apply(null, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the oldest starting date from the list of tasks\r\n     *\r\n     * @returns Date\r\n     * @memberof Gantt\r\n     */\r\n    get_oldest_starting_date() {\r\n        return this.tasks\r\n            .map((task) => task._start)\r\n            .reduce((prev_date, cur_date) =>\r\n                cur_date <= prev_date ? cur_date : prev_date\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Clear all elements from the parent svg element\r\n     *\r\n     * @memberof Gantt\r\n     */\r\n    clear() {\r\n        this.$svg.innerHTML = '';\r\n    }\r\n}\r\n\r\nGantt.VIEW_MODE = VIEW_MODE;\r\n\r\nfunction generate_id(task) {\r\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\r\n}\r\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","date_utils","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","parseInt","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replace","push","value","diff","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","matches","parentNode","getAttribute","style","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","_end","_start","step","width","column_width","progress_width","progress","group","class","custom_class","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","draw_bar","draw_progress_bar","draw_label","draw_resize_handles","$bar","rx","ry","classList","$bar_progress","requestAnimationFrame","update_label_position","bar","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","popup_trigger","show_popup","unselect_all","trigger_event","bar_being_dragged","subtitle","language","target_element","title","handle_selected","update_bar_position","dependencies","dep","get_bar","reduce","prev","curr","update_attr","update_handle_position","update_progressbar_position","update_arrow_position","date_changed","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","gantt_start","width_in_units","task_start","view_is","header_height","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","label","getBBox","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","left","Popup","parent","custom_html","make","hide","pointer","show","Error","html","clientWidth","position_meta","HTMLElement","getBoundingClientRect","top","transform","opacity","Table","dragStartY","columns","draw_table_header","$thead","createElement","$tr","column","$th","textContent","setGroupPosition","data","acc","cur","filter","t","parentId","groupPosition","draw_table_body","tasks","$tbody","make_table_row","row","append","bind_draggable_event","isRowLine","find","index","$td","render","level","deps","type","className","closed","$ins","child_node","text","createTextNode","get_drag_after_element","container","querySelectorAll","child","box","NEGATIVE_INFINITY","find_task_item","preventDefault","clientY","draggableEl","afterElement","insertBefore","async","targetItem","dragItem","afterItem","params","c_id","ref","c_position","p_position","p_parentId","arr","draggble_rerender","Split","wrapper","draw_split_bar","$split_bar","mouseMoveHandler","$table","previousElementSibling","$gantt","nextSibling","clientX","max","min","offsetLeft","mouseUpHandler","prepend","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","Gantt","contents","originTasks","setup_options","setup_tasks","setup_wrapper","change_view_mode","bind_events","setup_split_bar","setup_table","svg_element","wrapper_element","$svg","$wrapper","$container","parent_element","parentElement","setup_mode_handler","popup_wrapper","excel_export","btn_group","innerText","float","btn","view_mode","childNodes","default_options","view_modes","date_format","custom_popup_html","assign","sort_tasks","start","end","every","trim","random","toString","generate_id","setup_dependencies","dependency_map","refresh","rerender_table","mode","update_view_scale","setup_dates","setup_gantt_dates","setup_date_values","gantt_end","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","$table_body","table","bind_table_event","item","update_origin_tasks","set_task_array","flat","Infinity","root","get_target_array","rootArr","some","r","Array","isArray","layers","layer","make_table","dataset","$target","contains","splice","get_task","$table_container","$table_header","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","$grid_row","toggle","grid_width","grid_height","grid","rows_layer","row_width","row_height","row_y","tick_x","tick_y","tick_height","tick_class","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","x2","last_date","get_date_info","date_text","Day_lower","Week_lower","Month_lower","Year_lower","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","task_id","dependency","Boolean","cur_width","actual_width","scroll_pos","get_oldest_starting_date","scrollLeft","hide_popup","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","offsetX","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","el","modes","popup","args","apply","prev_date"],"mappings":"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"}